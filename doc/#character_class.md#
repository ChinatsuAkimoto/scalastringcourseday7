# 1.ТббТ╗·Т╝я
<h3>1.1ТббUnicodeТе│Тб╝Те╔Те▌ТедТеєТе╚Тд╬Те░ТеыТб╝Те╫Т╩мТд▒</h3>
<img src="../image/string_course.002.jpeg" width="500px"><br>
UnicodeТе│Тб╝Те╔Те▌ТедТеєТе╚Тд╬Те░ТеыТб╝Те╫Т╩мТд▒Тд╦Тд╧ТбвUnicodeТе╣ТепТеъТе╫Те╚ТбвТе╓ТеэТе├ТепТбвТелТе╞Те┤ТеъТбвТе╨ТедТе╩ТеъТбжТе╫ТеэТе╤Те╞ТегТдмТдвТдъТд▐Тд╣Тбг
<table>
<tr><th>UnicodeТе│Тб╝Те╔Те▌ТедТеєТе╚Тд╬Те░ТеыТб╝Те╫Т╩мТд▒</th><th>Т╞├Т─з</th></tr>
<tr><td>UnicodeТе╣ТепТеъТе╫Те╚</td><td>Т┴┤Тд╞Тд╬UnicodeТе│Тб╝Те╔Те▌ТедТеєТе╚Тд╧Т├▒Т░ьТд╬UnicodeТе╣ТепТеъТе╫Те╚Тд╦Т│фТдъТ┼ЎТд╞ТдщТдьТд▐Тд╣Тбг<br>rf. <a href="http://www.unicode.org/reports/tr24/tr24-24.html" target="_blank">UnicodeБо Standard Annex #24 UNICODE SCRIPT PROPERTY</a></td></tr>
<tr><td>UnicodeТе╓ТеэТе├Теп</td><td>Т╧вТ┬│Тд╣ТдыUnicodeТе│Тб╝Те╔Те▌ТедТеєТе╚Тд╬Т▓ЇТбгТ┴┤Тд╞Тд╬UnicodeТе╓ТеэТе├ТепТд╧UnicodeТе│Тб╝Те╔Те▌ТедТеєТе╚Тд╬Т▓╝Т╕┬Тд╚Т╛хТ╕┬Тд╟Т─ъТ╡┴Тд╡ТдьТд▐Тд╣Тбг<br>rf. <a href="http://www.unicode.org/Public/UCD/latest/ucd/Blocks.txt" target="_blank">Character Block Property Data File</a></td></tr>
<tr><td>UnicodeТелТе╞Те┤Теъ</td><td>Т┴┤Тд╞Тд╬UnicodeТе│Тб╝Те╔Те▌ТедТеєТе╚Тд╧Т░ьТ╚╠ТелТе╞Те┤ТеъТд╦Т│фТдъТ┼ЎТд╞ТдщТдьТд▐Тд╣ТбгТд╜Тд╖Тд╞ТбвТ┴┤Тд╞Тд╬UnicodeТе│Тб╝Те╔Те▌ТедТеєТе╚Тд╧Те╡Те╓ТелТе╞Те┤ТеъТд╦ТдтТ│фТдъТ┼ЎТд╞ТдщТдьТд▐Тд╣Тбг<br>rf. <a href="http://unicode.org/reports/tr44/#General_Category_Values" target="_blank">5.7.1 General Category Values - UnicodeБо Standard Annex #44 UNICODE CHARACTER DATABASE</a></td></tr>
<tr><td>UnicodeТе╨ТедТе╩ТеъТбжТе╫ТеэТе╤Те╞Тег</td><td>UnicodeТе╫ТеэТе╤Те╞ТегТд╬ТджТд┴ТбвТе╨ТедТе╩ТеъТ╖┐Тд╟Т─ъТ╡┴Тд╡ТдьТд╞ТддТдыТдтТд╬Тд╟Тд╣ТбгТд╜Тд╬ТджТд┴Тд╬Т░ьТ╔ЇТдмJavaТд╬Т└╡Т╡мТ╔╜Т╕╜Тд╟Т─ъТ╡┴Тд╡ТдьТд╞ТддТд▐Тд╣Тбг<br>
rf.<br>
<ul>
<li><a href="http://www.unicode.org/reports/tr44/#Property_List_Table" target="_blank">Table 9. Property Table - UnicodeБо Standard Annex #44 UNICODE CHARACTER DATABASE</a></li>
<li><a href="http://www.unicode.org/Public/UCD/latest/ucd/PropList.txt" target="_blank">PropList.txt</a></li>
</ul>
</td></tr>
</table>
***
<h3>1.1.1ТббUnicodeТе╣ТепТеъТе╫Те╚</h3>
<img src="../image/string_course.003.jpeg" width="500px"><br>
UnicodeТе╣ТепТеъТе╫Те╚Тд╧<a href="http://www.unicode.org/reports/tr24/" target="_blank">Unicode Standard Annex#24: Script Names</a>Тд╟Т╡мТ─ъТд╡ТдьТд╞ТдкТдъТбвТд╣Тд┘Тд╞Тд╬UnicodeТ╩╕Т╗·Тд╧ТбвТ├▒Т░ьТд╬UnicodeТе╣ТепТеъТе╫Те╚(LatinТд╩Тд╔Тд╬Т╞├Т─ъТд╬Те╣ТепТеъТе╫Те╚ТдлТбв3Тд─Тд╬Т╞├Т╝ьТ├═CommonТбвInheritedТбвUnknownТд╬ТддТд║ТдьТдл)Тд╦Т│фТдъТ┼ЎТд╞ТдщТдьТд▐Тд╣Тбг
<table>
<tr><th>Т╞├Т╝ьТд╩Те╣ТепТеъТе╫Те╚</th><th>Т└тТ╠└</th></tr>
<tr><td>Common</td><td>Т═╤Т╗·ТдЄТд▐Тд┐ТдмТд├Тд╞Т╢жТ─╠Тд╦Т╗╚ТджТе╣ТепТеъТе╫Те╚</td></tr>
<tr><td>Inherite</td><td>Т╬┘Т└▄Тд╖Тд┐Т╩╕Т╗·ТдлТдщТе╣ТепТеъТе╫Те╚ТдЄТ╝їТд▒Т╖╤Тд░Те╣ТепТеъТе╫Те╚</td></tr>
<tr><td>Unknown</td><td>Т╠дТ├╬Тд╬Те╣ТепТеъТе╫Те╚</td></tr>
</table>

<table>
<tr><th>UnicodeТе╣ТепТеъТе╫Те╚</th><th>java.lang.Character.UnicodeScript</th></tr>
<tr><td>Arabic</td><td>ARABIC</td></tr>
<tr><td>Armenian</td><td>ARMENIAN</td></tr>
<tr><td>Avestan</td><td>AVESTAN</td></tr>
<tr><td>Balinese</td><td>BALINESE</td></tr>
<tr><td>Bamum</td><td>BAMUM</td></tr>
<tr><td>Batak</td><td>BATAK</td></tr>
<tr><td>Bengali</td><td>BENGALI</td></tr>
<tr><td>Bopomofo</td><td>BOPOMOFO</td></tr>
<tr><td>Brahmi</td><td>BRAHMI</td></tr>
<tr><td>Braille</td><td>BRAILLE</td></tr>
<tr><td>Buginese</td><td>BUGINESE</td></tr>
<tr><td>Buhid</td><td>BUHID</td></tr>
<tr><td>Canadian_Aboriginal</td><td>CANADIAN_ABORIGINAL</td></tr>
<tr><td>Carian</td><td>CARIAN</td></tr>
<tr><td>Chakma</td><td>CHAKMA</td></tr>
<tr><td>Cham</td><td>CHAM</td></tr>
<tr><td>Cherokee</td><td>CHEROKEE</td></tr>
<tr><td><strong><i>Common</i></strong></td><td><strong><i>COMMON</i></strong></td></tr>
<tr><td>Coptic</td><td>COPTIC</td></tr>
<tr><td>Cuneiform</td><td>CUNEIFORM</td></tr>
<tr><td>Cypriot</td><td>CYPRIOT</td></tr>
<tr><td>Cyrillic</td><td>CYRILLIC</td></tr>
<tr><td>Deseret</td><td>DESERET</td></tr>
<tr><td>Devanagari</td><td>DEVANAGARI</td></tr>
<tr><td>Egyptian_Hieroglyphs</td><td>EGYPTIAN_HIEROGLYPHS</td></tr>
<tr><td>Ethiopic</td><td>ETHIOPIC</td></tr>
<tr><td>Georgian</td><td>GEORGIAN</td></tr>
<tr><td>Glagolitic</td><td>GLAGOLITIC</td></tr>
<tr><td>Gothic</td><td>GOTHIC</td></tr>
<tr><td>Greek</td><td>GREEK</td></tr>
<tr><td>Gujarati</td><td>GUJARATI</td></tr>
<tr><td>Gurmukhi</td><td>GURMUKHI</td></tr>
<tr><td><strong>Han</strong></td><td><strong>HAN</strong></td></tr>
<tr><td>Hangul</td><td>HANGUL</td></tr>
<tr><td>Hanunoo</td><td>HANUNOO</td></tr>
<tr><td>Hebrew</td><td>HEBREW</td></tr>
<tr><td><strong>Hiragana</strong></td><td><strong>HIRAGANA</strong></td></tr>
<tr><td>Imperial_Aramaic</td><td>IMPERIAL_ARAMAIC</td></tr>
<tr><td><strong><i>Inherited</i></strong></td><td><strong><i>INHERITED</i></strong></td></tr>
<tr><td>Inscriptional_Pahlavi</td><td>INSCRIPTIONAL_PAHLAVI</td></tr>
<tr><td>Inscriptional_Parthian</td><td>INSCRIPTIONAL_PARTHIAN</td></tr>
<tr><td>Javanese</td><td>JAVANESE</td></tr>
<tr><td>Kaithi</td><td>KAITHI</td></tr>
<tr><td>Kannada</td><td>KANNADA</td></tr>
<tr><td><strong>Katakana</strong></td><td><strong>KATAKANA</strong></td></tr>
<tr><td>Kayah_Li</td><td>KAYAH_LI</td></tr>
<tr><td>Kharoshthi</td><td>KHAROSHTHI</td></tr>
<tr><td>Khmer</td><td>KHMER</td></tr>
<tr><td>Lao</td><td>LAO</td></tr>
<tr><td><strong>Latin</strong></td><td><strong>LATIN</strong></td></tr>
<tr><td>Lepcha</td><td>LEPCHA</td></tr>
<tr><td>Limbu</td><td>LIMBU</td></tr>
<tr><td>Linear_B</td><td>LINEAR_B</td></tr>
<tr><td>Lisu</td><td>LISU</td></tr>
<tr><td>Lycian</td><td>LYCIAN</td></tr>
<tr><td>Lydian</td><td>LYDIAN</td></tr>
<tr><td>Malayalam</td><td>MALAYALAM</td></tr>
<tr><td>Mandaic</td><td>MANDAIC</td></tr>
<tr><td>Meetei_Mayek</td><td>MEETEI_MAYEK</td></tr>
<tr><td>Meroitic Cursive</td><td>MEROITIC_CURSIVE</td></tr>
<tr><td>Meroitic Hieroglyphs</td><td>MEROITIC_HIEROGLYPHS</td></tr>
<tr><td>Miao</td><td>MIAO</td></tr>
<tr><td>Mongolian</td><td>MONGOLIAN</td></tr>
<tr><td>Myanmar</td><td>Myanmar</td></tr>
<tr><td>New_Tai_Lue</td><td>NEW_TAI_LUE</td></tr>
<tr><td>Nko</td><td>NKO</td></tr>
<tr><td>Ogham</td><td>OGHAM</td></tr>
<tr><td>Ol_Chiki</td><td>OL_CHIKI</td></tr>
<tr><td>Old_Italic</td><td>OLD_ITALIC</td></tr>
<tr><td>Old_Persian</td><td>OLD_PERSIAN</td></tr>
<tr><td>Old_South_Arabian</td><td>OLD_SOUTH_ARABIAN</td></tr>
<tr><td>Old_Turkic</td><td>OLD_TURKIC</td></tr>
<tr><td>Oriya</td><td>ORIYA</td></tr>
<tr><td>Osmanya</td><td>OSMANYA</td></tr>
<tr><td>Phags_Pa</td><td>PHAGS_PA</td></tr>
<tr><td>Phoenician</td><td>PHOENICIAN</td></tr>
<tr><td>Rejang</td><td>REJANG</td></tr>
<tr><td>Runic</td><td>RUNIC</td></tr>
<tr><td>Samaritan</td><td>SAMARITAN</td></tr>
<tr><td>Saurashtra</td><td>SAURASHTRA</td></tr>
<tr><td>Sharada</td><td>SHARADA</td></tr>
<tr><td>Shavian</td><td>SHAVIAN</td></tr>
<tr><td>Sinhala</td><td>SINHALA</td></tr>
<tr><td>Sora Sompeng</td><td>SORA_SOMPENG</td></tr>
<tr><td>Sundanese</td><td>SUNDANESE</td></tr>
<tr><td>Syloti_Nagri</td><td>SYLOTI_NAGRI</td></tr>
<tr><td>Syriac</td><td>SYRIAC</td></tr>
<tr><td>Tagalog</td><td>TAGALOG</td></tr>
<tr><td>Tagbanwa</td><td>TAGBANWA</td></tr>
<tr><td>Tai_Le</td><td>TAI_LE</td></tr>
<tr><td>Tai_Tham</td><td>TAI_THAM</td></tr>
<tr><td>Tai_Viet</td><td>TAI_VIET</td></tr>
<tr><td>Takri</td><td>TAKRI</td></tr>
<tr><td>Tamil</td><td>TAMIL</td></tr>
<tr><td>Telugu</td><td>TELUGU</td></tr>
<tr><td>Thaana</td><td>THAANA</td></tr>
<tr><td>Thai</td><td>THAI</td></tr>
<tr><td>Tibetan</td><td>TIBETAN</td></tr>
<tr><td>Tifinagh</td><td>TIFINAGH</td></tr>
<tr><td>Ugaritic</td><td>UGARITIC</td></tr>
<tr><td><strong><i>Unknown</i></strong></td><td><strong><i>UNKNOWN</i></strong></td></tr>
<tr><td>Vai</td><td>VAI</td></tr>
<tr><td>Yi</td><td>YI</td></tr>
</table>
```scala
  @Test
  def testCharacterUnicodeScriptOf(): Unit = {
    assert(Character.UnicodeScript.of(hiraganaCodePoint) == Character.UnicodeScript.HIRAGANA)
    assert(Character.UnicodeScript.of(katakanaCodePoint) == Character.UnicodeScript.KATAKANA)
    assert(Character.UnicodeScript.of(kanjiCodePoint)    == Character.UnicodeScript.HAN)
    assert(Character.UnicodeScript.of(alphabetCodePoint) == Character.UnicodeScript.LATIN)
    assert(Character.UnicodeScript.of(symbolCodePoint)   == Character.UnicodeScript.COMMON)
  }
```
***
<h3>1.1.2ТббUnicodeТе╓ТеэТе├Теп</h3>
<img src="../image/string_course.004.jpeg" width="500px"><br>
Т┴┤Тд╞Тд╬UnicodeТе╓ТеэТе├ТепТд╧UnicodeТе│Тб╝Те╔Те▌ТедТеєТе╚Тд╬Т▓╝Т╕┬Тд╚Т╛хТ╕┬Тд╟Т─ъТ╡┴Тд╡ТдьТд▐Тд╣Тбг
Т│╞UnicodeТе╓ТеэТе├ТепТд╬Т▓╝Т╕┬Тд╚Т╛хТ╕┬Тд╬UnicodeТе│Тб╝Те╔Те▌ТедТеєТе╚Тд╧Тб╓<a href="http://www.unicode.org/Public/UCD/latest/ucd/Blocks.txt" target="_blank">Character Block Property Data File</a>Тб╫Тд╟Т│╬Т╟зТд╟ТднТд▐Тд╣Тбг
<table>
<tr><th>UnicodeТе╓ТеэТе├Теп</th><th>java.lang.Character.UnicodeBlock</th></tr>
<tr><td>Aegean Numbers</td><td>AEGEAN_NUMBERS</td></tr>
<tr><td>Alchemical Symbols</td><td>ALCHEMICAL_SYMBOLS</td></tr>
<tr><td>Alphabetic Presentation Forms</td><td>ALPHABETIC_PRESENTATION_FORMS</td></tr>
<tr><td>Ancient Greek Musical Notation</td><td>ANCIENT_GREEK_MUSICAL_NOTATION</td></tr>
<tr><td>Ancient Greek Numbers</td><td>ANCIENT_GREEK_NUMBERS</td></tr>
<tr><td>Ancient Symbols</td><td>ANCIENT_SYMBOLS</td></tr>
<tr><td>Arabic</td><td>ARABIC</td></tr>
<tr><td>Arabic Extended-A</td><td>ARABIC_EXTENDED_A</td></tr>
<tr><td>Arabic Mathematical Alphabetic Symbols</td><td>ARABIC_MATHEMATICAL_ALPHABETIC_SYMBOLS</td></tr>
<tr><td>Arabic Presentation Forms-A</td><td>ARABIC_PRESENTATION_FORMS_A</td></tr>
<tr><td>Arabic Presentation Forms-B</td><td>ARABIC_PRESENTATION_FORMS_B</td></tr>
<tr><td>Arabic Supplement</td><td>ARABIC_SUPPLEMENT</td></tr>
<tr><td>Armenian</td><td>ARMENIAN</td></tr>
<tr><td>Arrows</td><td>ARROWS</td></tr>
<tr><td>Avestan</td><td>AVESTAN</td></tr>
<tr><td>Balinese</td><td>BALINESE</td></tr>
<tr><td>Bamum</td><td>BAMUM</td></tr>
<tr><td>Bamum Supplement</td><td>BAMUM_SUPPLEMENT</td></tr>
<tr><td><strong>Basic Latin</strong></td><td><strong>BASIC_LATIN</strong></td></tr>
<tr><td>Batak</td><td>BATAK</td></tr>
<tr><td>Bengali</td><td>BENGALI</td></tr>
<tr><td>Block Elements</td><td>BLOCK_ELEMENTS</td></tr>
<tr><td>Bopomofo</td><td>BOPOMOFO</td></tr>
<tr><td>Bopomofo Extended</td><td>BOPOMOFO_EXTENDED</td></tr>
<tr><td>Box Drawing</td><td>BOX_DRAWING</td></tr>
<tr><td>Brahmi</td><td>BRAHMI</td></tr>
<tr><td>Braille Patterns</td><td>BRAILLE_PATTERNS</td></tr>
<tr><td>Buginese</td><td>BUGINESE</td></tr>
<tr><td>Buhid</td><td>BUHID</td></tr>
<tr><td>Byzantine Musical Symbols</td><td>BYZANTINE_MUSICAL_SYMBOLS</td></tr>
<tr><td>Carian</td><td>CARIAN</td></tr>
<tr><td>Cham</td><td>CHAM</td></tr>
<tr><td>Cherokee</td><td>CHEROKEE</td></tr>
<tr><td>CJK Compatibility</td><td>CJK_COMPATIBILITY</td></tr>
<tr><td>CJK Compatibility Forms</td><td>CJK_COMPATIBILITY_FORMS</td></tr>
<tr><td><strong>CJK Compatibility Ideographs</strong></td><td><strong>CJK_COMPATIBILITY_IDEOGRAPHS</strong></td></tr>
<tr><td><strong>CJK Compatibility Ideographs Supplement</strong></td><td><strong>CJK_COMPATIBILITY_IDEOGRAPHS_SUPPLEMENT</strong></td></tr>
<tr><td><strong>CJK Radicals Supplement</strong></td><td><strong>CJK_RADICALS_SUPPLEMENT</strong></td></tr>
<tr><td><strong>CJK Strokes</strong></td><td><strong>CJK_STROKES</strong></td></tr>
<tr><td><strong>CJK Symbols and Punctuation</strong></td><td><strong>CJK_SYMBOLS_AND_PUNCTUATION</strong></td></tr>
<tr><td><strong>CJK Unified Ideographs</strong></td><td><strong><strong>CJK_UNIFIED_IDEOGRAPHS</strong></td></tr>
<tr><td><strong>CJK Unified Ideographs Extension A</strong></td><td><strong>CJK_UNIFIED_IDEOGRAPHS_EXTENSION_A</strong></td></tr>
<tr><td><strong>CJK Unified Ideographs Extension B</strong></td><td><strong>CJK_UNIFIED_IDEOGRAPHS_EXTENSION_B</strong></td></tr>
<tr><td><strong>CJK Unified Ideographs Extension C</strong></td><td><strong>CJK_UNIFIED_IDEOGRAPHS_EXTENSION_C</strong></td></tr>
<tr><td><strong>CJK Unified Ideographs Extension D</strong></td><td><strong>CJK_UNIFIED_IDEOGRAPHS_EXTENSION_D</strong></td></tr>
<tr><td>Combining Diacritical Marks</td><td>COMBINING_DIACRITICAL_MARKS</td></tr>
<tr><td>Combining Diacritical Marks Supplement</td><td>COMBINING_DIACRITICAL_MARKS_SUPPLEMENT</td></tr>
<tr><td>Combining Half Marks</td><td>COMBINING_HALF_MARKS</td></tr>
<tr><td>Combining Diacritical Marks for Symbols</td><td>COMBINING_MARKS_FOR_SYMBOLS</td></tr>
<tr><td>Common Indic Number Forms</td><td>COMMON_INDIC_NUMBER_FORMS</td></tr>
<tr><td>Control Pictures</td><td>CONTROL_PICTURES</td></tr>
<tr><td>Coptic</td><td>COPTIC</td></tr>
<tr><td>Counting Rod Numerals</td><td>COUNTING_ROD_NUMERALS</td></tr>
<tr><td>Cuneiform</td><td>CUNEIFORM</td></tr>
<tr><td>Cuneiform Numbers and Punctuation</td><td>CUNEIFORM_NUMBERS_AND_PUNCTUATION</td></tr>
<tr><td>Currency Symbols</td><td>CURRENCY_SYMBOLS</td></tr>
<tr><td>Cypriot Syllabary</td><td>CYPRIOT_SYLLABARY</td></tr>
<tr><td>Cyrillic</td><td>CYRILLIC</td></tr>
<tr><td>Cyrillic Extended-A</td><td>CYRILLIC_EXTENDED_A</td></tr>
<tr><td>Cyrillic Extended-B</td><td>CYRILLIC_EXTENDED_B</td></tr>
<tr><td>Cyrillic Supplementary</td><td>CYRILLIC_SUPPLEMENTARY</td></tr>
<tr><td>Deseret</td><td>DESERET</td></tr>
<tr><td>Devanagari</td><td>DEVANAGARI</td></tr>
<tr><td>Devanagari Extended</td><td>DEVANAGARI_EXTENDED</td></tr>
<tr><td>Dingbats</td><td>DINGBATS</td></tr>
<tr><td>Domino Tiles</td><td>DOMINO_TILES</td></tr>
<tr><td>Egyptian Hieroglyphs</td><td>EGYPTIAN_HIEROGLYPHS</td></tr>
<tr><td>Emoticons</td><td>EMOTICONS</td></tr>
<tr><td>Enclosed Alphanumeric Supplement</td><td>ENCLOSED_ALPHANUMERIC_SUPPLEMENT</td></tr>
<tr><td>Enclosed Alphanumerics</td><td>ENCLOSED_ALPHANUMERICS</td></tr>
<tr><td>Enclosed CJK Letters and Months</td><td>ENCLOSED_CJK_LETTERS_AND_MONTHS</td></tr>
<tr><td>Enclosed Ideographic Supplement</td><td>ENCLOSED_IDEOGRAPHIC_SUPPLEMENT</td></tr>
<tr><td>Ethiopic</td><td>ETHIOPIC</td></tr>
<tr><td>Ethiopic Extended</td><td>ETHIOPIC_EXTENDED</td></tr>
<tr><td>Ethiopic Extended-A</td><td>ETHIOPIC_EXTENDED_A</td></tr>
<tr><td>Ethiopic Supplement</td><td>ETHIOPIC_SUPPLEMENT</td></tr>
<tr><td>General Punctuation</td><td>GENERAL_PUNCTUATION</td></tr>
<tr><td>Geometric Shapes</td><td>GEOMETRIC_SHAPES</td></tr>
<tr><td>Georgian</td><td>GEORGIAN</td></tr>
<tr><td>Georgian Supplement</td><td>GEORGIAN_SUPPLEMENT</td></tr>
<tr><td>Glagolitic</td><td>GLAGOLITIC</td></tr>
<tr><td>Gothic</td><td>GOTHIC</td></tr>
<tr><td>Greek and Coptic</td><td>GREEK</td></tr>
<tr><td>Greek Extended</td><td>GREEK_EXTENDED</td></tr>
<tr><td>Gujarati</td><td>GUJARATI</td></tr>
<tr><td>Gurmukhi</td><td>GURMUKHI</td></tr>
<tr><td>Halfwidth and Fullwidth Forms</td><td>HALFWIDTH_AND_FULLWIDTH_FORMS</td></tr>
<tr><td>Hangul Compatibility Jamo</td><td>HANGUL_COMPATIBILITY_JAMO</td></tr>
<tr><td>Hangul Jamo</td><td>HANGUL_JAMO</td></tr>
<tr><td>Hangul Jamo Extended-A</td><td>HANGUL_JAMO_EXTENDED_A</td></tr>
<tr><td>Hangul Jamo Extended-B</td><td>HANGUL_JAMO_EXTENDED_B</td></tr>
<tr><td>Hangul Syllables</td><td>HANGUL_SYLLABLES</td></tr>
<tr><td>Hanunoo</td><td>HANUNOO</td></tr>
<tr><td>Hebrew</td><td>HEBREW</td></tr>
<tr><td><strong>Hiragana</strong></td><td><strong>HIRAGANA</strong></td></tr>
<tr><td><strong>Ideographic Description Characters</strong></td><td><strong>IDEOGRAPHIC_DESCRIPTION_CHARACTERS</strong></td></tr>
<tr><td>Imperial Aramaic</td><td>IMPERIAL_ARAMAIC</td></tr>
<tr><td>Inscriptional Pahlavi</td><td>INSCRIPTIONAL_PAHLAVI</td></tr>
<tr><td>Inscriptional Parthian</td><td>INSCRIPTIONAL_PARTHIAN</td></tr>
<tr><td>IPA Extensions</td><td>IPA_EXTENSIONS</td></tr>
<tr><td>Javanese</td><td>JAVANESE</td></tr>
<tr><td>Kaithi</td><td>KAITHI</td></tr>
<tr><td><strong>Kana Supplement</strong></td><td><strong>KANA_SUPPLEMENT</strong></td></tr>
<tr><td><strong>Kanbun</strong></td><td><strong>KANBUN</strong></td></tr>
<tr><td>Kangxi Radicals</td><td>KANGXI_RADICALS</td></tr>
<tr><td>Kannada</td><td>KANNADA</td></tr>
<tr><td><strong>Katakana</strong></td><td><strong>KATAKANA</strong></td></tr>
<tr><td><strong>Katakana Phonetic Extensions</strong></td><td><strong>KATAKANA_PHONETIC_EXTENSIONS</strong></td></tr>
<tr><td>Kayah Li</td><td>KAYAH_LI</td></tr>
<tr><td>Kharoshthi</td><td>KHAROSHTHI</td></tr>
<tr><td>Khmer</td><td>KHMER</td></tr>
<tr><td>Khmer Symbols</td><td>KHMER_SYMBOLS</td></tr>
<tr><td>Lao</td><td>LAO</td></tr>
<tr><td>Latin-1 Supplement</td><td>LATIN_1_SUPPLEMENT</td></tr>
<tr><td>Latin Extended-A</td><td>LATIN_EXTENDED_A</td></tr>
<tr><td>Latin Extended Additional</td><td>LATIN_EXTENDED_ADDITIONAL</td></tr>
<tr><td>Latin Extended-B</td><td>LATIN_EXTENDED_B</td></tr>
<tr><td>Latin Extended-C</td><td>LATIN_EXTENDED_C</td></tr>
<tr><td>Latin Extended-D</td><td>LATIN_EXTENDED_D</td></tr>
<tr><td>Lepcha</td><td>LEPCHA</td></tr>
<tr><td>Letterlike Symbols</td><td>LETTERLIKE_SYMBOLS</td></tr>
<tr><td>Limbu</td><td>LIMBU</td></tr>
<tr><td>Linear B Ideograms</td><td>LINEAR_B_IDEOGRAMS</td></tr>
<tr><td>Linear B Syllabary</td><td>LINEAR_B_SYLLABARY</td></tr>
<tr><td>Lisu</td><td>LISU</td></tr>
<tr><td>Lycian</td><td>LYCIAN</td></tr>
<tr><td>Lydian</td><td>LYDIAN</td></tr>
<tr><td>Mahjong Tiles</td><td>MAHJONG_TILES</td></tr>
<tr><td>Malayalam</td><td>MALAYALAM</td></tr>
<tr><td>Mandaic</td><td>MANDAIC</td></tr>
<tr><td>Mathematical Alphanumeric Symbols</td><td>MATHEMATICAL_ALPHANUMERIC_SYMBOLS</td></tr>
<tr><td>Mathematical Operators</td><td>MATHEMATICAL_OPERATORS</td></tr>
<tr><td>Meetei Mayek</td><td>MEETEI_MAYEK</td></tr>
<tr><td>Meetei Mayek Extensions</td><td>MEETEI_MAYEK_EXTENSIONS</td></tr>
<tr><td>Meroitic Cursive</td><td>MEROITIC_CURSIVE</td></tr>
<tr><td>Meroitic Hieroglyphs</td><td>MEROITIC_HIEROGLYPHS</td></tr>
<tr><td>Miao</td><td>MIAO</td></tr>
<tr><td>Miscellaneous Mathematical Symbols-A</td><td>MISCELLANEOUS_MATHEMATICAL_SYMBOLS_A</td></tr>
<tr><td>Miscellaneous Mathematical Symbols-B</td><td>MISCELLANEOUS_MATHEMATICAL_SYMBOLS_B</td></tr>
<tr><td>Miscellaneous Symbols</td><td>MISCELLANEOUS_SYMBOLS</td></tr>
<tr><td>Miscellaneous Symbols and Arrows</td><td>MISCELLANEOUS_SYMBOLS_AND_ARROWS</td></tr>
<tr><td>Miscellaneous Symbols And Pictographs</td><td>MISCELLANEOUS_SYMBOLS_AND_PICTOGRAPHS</td></tr>
<tr><td>Miscellaneous Technical</td><td>MISCELLANEOUS_TECHNICAL</td></tr>
<tr><td>Modifier Tone Letters</td><td>MODIFIER_TONE_LETTERS</td></tr>
<tr><td>Mongolian</td><td>MONGOLIAN</td></tr>
<tr><td>Musical Symbols</td><td>MUSICAL_SYMBOLS</td></tr>
<tr><td>Myanmar</td><td>MYANMAR</td></tr>
<tr><td>Myanmar Extended-A</td><td>MYANMAR_EXTENDED_A</td></tr>
<tr><td>New Tai Lue</td><td>NEW_TAI_LUE</td></tr>
<tr><td>NKo</td><td>NKO</td></tr>
<tr><td>Number Forms</td><td>NUMBER_FORMS</td></tr>
<tr><td>Ogham</td><td>OGHAM</td></tr>
<tr><td>Ol Chiki</td><td>OL_CHIKI</td></tr>
<tr><td>Old Italic</td><td>OLD_ITALIC</td></tr>
<tr><td>Old Persian</td><td>OLD_PERSIAN</td></tr>
<tr><td>Old South Arabian</td><td>OLD_SOUTH_ARABIAN</td></tr>
<tr><td>Old Turkic</td><td>OLD_TURKIC</td></tr>
<tr><td>Optical Character Recognition</td><td>OPTICAL_CHARACTER_RECOGNITION</td></tr>
<tr><td>Oriya</td><td>ORIYA</td></tr>
<tr><td>Osmanya</td><td>OSMANYA</td></tr>
<tr><td>Phags-pa</td><td>PHAGS_PA</td></tr>
<tr><td>Phaistos Disc</td><td>PHAISTOS_DISC</td></tr>
<tr><td>Phoenician</td><td>PHOENICIAN</td></tr>
<tr><td>Phonetic Extensions</td><td>PHONETIC_EXTENSIONS</td></tr>
<tr><td>Phonetic Extensions Supplement</td><td>PHONETIC_EXTENSIONS_SUPPLEMENT</td></tr>
<tr><td>Playing Cards</td><td>PLAYING_CARDS</td></tr>
<tr><td>Private Use Area</td><td>PRIVATE_USE_AREA</td></tr>
<tr><td>Rejang</td><td>REJANG</td></tr>
<tr><td>Rumi Numeral Symbols</td><td>RUMI_NUMERAL_SYMBOLS</td></tr>
<tr><td>Runic</td><td>RUNIC</td></tr>
<tr><td>Samaritan</td><td>SAMARITAN</td></tr>
<tr><td>Saurashtra</td><td>SAURASHTRA</td></tr>
<tr><td>Sharada</td><td>SHARADA</td></tr>
<tr><td>Shavian</td><td>SHAVIAN</td></tr>
<tr><td>Sinhala</td><td>SINHALA</td></tr>
<tr><td>Small Form Variants</td><td>SMALL_FORM_VARIANTS</td></tr>
<tr><td>Sora Sompeng</td><td>SORA_SOMPENG</td></tr>
<tr><td>Spacing Modifier Letters</td><td>SPACING_MODIFIER_LETTERS</td></tr>
<tr><td>Specials</td><td>SPECIALS</td></tr>
<tr><td>Sundanese</td><td>SUNDANESE</td></tr>
<tr><td>Sundanese Supplement</td><td>SUNDANESE_SUPPLEMENT</td></tr>
<tr><td>Superscripts and Subscripts</td><td>SUPERSCRIPTS_AND_SUBSCRIPTS</td></tr>
<tr><td>Supplemental Arrows-A</td><td>SUPPLEMENTAL_ARROWS_A</td></tr>
<tr><td>Supplemental Arrows-B</td><td>SUPPLEMENTAL_ARROWS_B</td></tr>
<tr><td>Supplemental Mathematical Operators</td><td>SUPPLEMENTAL_MATHEMATICAL_OPERATORS</td></tr>
<tr><td>Supplemental Punctuation</td><td>SUPPLEMENTAL_PUNCTUATION</td></tr>
<tr><td>Supplementary Private Use Area-A</td><td>SUPPLEMENTARY_PRIVATE_USE_AREA_A</td></tr>
<tr><td>Supplementary Private Use Area-B</td><td>SUPPLEMENTARY_PRIVATE_USE_AREA_B</td></tr>
<tr><td>Syloti Nagri</td><td>SYLOTI_NAGRI</td></tr>
<tr><td>Syriac</td><td>SYRIAC</td></tr>
<tr><td>Tagalog</td><td>TAGALOG</td></tr>
<tr><td>Tagbanwa</td><td>TAGBANWA</td></tr>
<tr><td>Tags</td><td>TAGS</td></tr>
<tr><td>Tai Le</td><td>TAI_LE</td></tr>
<tr><td>Tai Tham</td><td>TAI_THAM</td></tr>
<tr><td>Tai Viet</td><td>TAI_VIET</td></tr>
<tr><td>Tai Xuan Jing Symbols</td><td>TAI_XUAN_JING_SYMBOLS</td></tr>
<tr><td>Takri</td><td>TAKRI</td></tr>
<tr><td>Tamil</td><td>TAMIL</td></tr>
<tr><td>Telugu</td><td>TELUGU</td></tr>
<tr><td>Thaana</td><td>THAANA</td></tr>
<tr><td>Thai</td><td>THAI</td></tr>
<tr><td>Tibetan</td><td>TIBETAN</td></tr>
<tr><td>Tifinagh</td><td>TIFINAGH</td></tr>
<tr><td>Transport And Map Symbols</td><td>TRANSPORT_AND_MAP_SYMBOLS</td></tr>
<tr><td>Ugaritic</td><td>UGARITIC</td></tr>
<tr><td>Unified Canadian Aboriginal Syllabics</td><td>UNIFIED_CANADIAN_ABORIGINAL_SYLLABICS</td></tr>
<tr><td>Unified Canadian Aboriginal Syllabics Extended</td><td>UNIFIED_CANADIAN_ABORIGINAL_SYLLABICS_EXTENDED</td></tr>
<tr><td>Vai</td><td>VAI</td></tr>
<tr><td>Variation Selectors</td><td>VARIATION_SELECTORS</td></tr>
<tr><td>Variation Selectors Supplement</td><td>VARIATION_SELECTORS_SUPPLEMENT</td></tr>
<tr><td>Vedic Extensions</td><td>VEDIC_EXTENSIONS</td></tr>
<tr><td>Vertical Forms</td><td>VERTICAL_FORMS</td></tr>
<tr><td>Yi Radicals</td><td>YI_RADICALS</td></tr>
<tr><td>Yi Syllables</td><td>YI_SYLLABLES</td></tr>
<tr><td>Yijing Hexagram Symbols</td><td>YIJING_HEXAGRAM_SYMBOLS</td></tr>
</table>
```scala
  @Test
  def testCharacterUnicodeBlockOf(): Unit = {
    assert(Character.UnicodeBlock.of(hiraganaChar) == Character.UnicodeBlock.HIRAGANA)
    assert(Character.UnicodeBlock.of(katakanaChar) == Character.UnicodeBlock.KATAKANA)
    assert(Character.UnicodeBlock.of(kanjiChar)    == Character.UnicodeBlock.CJK_UNIFIED_IDEOGRAPHS)
    assert(Character.UnicodeBlock.of(alphabetChar) == Character.UnicodeBlock.BASIC_LATIN)
    assert(Character.UnicodeBlock.of(symbolChar)   == Character.UnicodeBlock.BASIC_LATIN)

    assert(Character.UnicodeBlock.of(hiraganaCodePoint) == Character.UnicodeBlock.HIRAGANA)
    assert(Character.UnicodeBlock.of(katakanaCodePoint) == Character.UnicodeBlock.KATAKANA)
    assert(Character.UnicodeBlock.of(kanjiCodePoint)    == Character.UnicodeBlock.CJK_UNIFIED_IDEOGRAPHS)
    assert(Character.UnicodeBlock.of(alphabetCodePoint) == Character.UnicodeBlock.BASIC_LATIN)
    assert(Character.UnicodeBlock.of(symbolCodePoint)   == Character.UnicodeBlock.BASIC_LATIN)
  }
```
***
<h3>1.1.3ТббUnicodeТелТе╞Те┤Теъ</h3>
<img src="../image/string_course.005.jpeg" width="500px"><br>
Т┴┤Тд╞Тд╬UnicodeТе│Тб╝Те╔Те▌ТедТеєТе╚Тд╧Т░ьТ╚╠ТелТе╞Те┤ТеъТд╦Т│фТдъТ┼ЎТд╞ТдщТдьТд▐Тд╣ТбгТд╜Тд╖Тд╞ТбвТ┴┤Тд╞Тд╬UnicodeТе│Тб╝Те╔Те▌ТедТеєТе╚Тд╧Те╡Те╓ТелТе╞Те┤ТеъТд╦ТдтТ│фТдъТ┼ЎТд╞ТдщТдьТд▐Тд╣Тбг<br>rf. <a href="http://unicode.org/reports/tr44/#General_Category_Values" target="_blank">5.7.1 General Category Values - UnicodeБо Standard Annex #44 UNICODE CHARACTER DATABASE</a><br><br>
Т░ьТ╚╠ТелТе╞Те┤Теъ
<table>
<tr><th>UnicodeТелТе╞Те┤Теъ</th><th>Т└тТ╠└</th><th>Те╡Те╓ТелТе╞Те┤Теъ</th></tr>
<tr><td>C</td><td>Тд╜Тд╬Т┬╛ (Other)</td><td>Cc | Cf | Cs | Co | Cn</td></tr>
<tr><td>L</td><td>ТевТеыТе╒ТебТе┘Те├Те╚ (Letter)</td><td>Lu | Ll | Lt | Lm | Lo</td></tr>
<tr><td>LC</td><td>caseТ╔╒ТднТевТеыТе╒ТебТе┘Те├Те╚Тб╩Cased LetterТб╦</td><td>Lu | Ll | Lt</td></tr>
<tr><td>M</td><td>Т╡нТ╣ц (Mark)</td><td>Mn | Mc | Me</td></tr>
<tr><td>N</td><td>Т┐ЇТ╗· (Number)</td><td>Nd | Nl | No</td></tr>
<tr><td>P</td><td>Т╢чТ╞╔Т╡нТ╣ц (Punctuation)</td><td>Pc | Pd | Ps | Pe | Pi | Pf | Po</td></tr>
<tr><td>S</td><td>Т╡нТ╣ц (Symbol)</td><td>Sm | Sc | Sk | So</td></tr>
<tr><td>Z</td><td>Т╢шТ└┌ТдъТ╩╕Т╗· (Separator)</td><td>Zs | Zl | Zp</td></tr>
</table>

Те╡Те╓ТелТе╞Те┤Теъ
<table>
<tr><th>UnicodeТелТе╞Те┤Теъ</th><th>Т└тТ╠└</th><th>java.lang.Character</th></tr>
<tr><td>Cc</td><td>C0/C1Т└йТ╕цТ╩╕Т╗· (ControlТб╦</td><td>CONTROL</td></tr>
<tr><td>Cf</td><td>Т╚єТ▓─Т╗ыТ└░Т╖┴Т═╤Т╩╕Т╗· (Format)</td><td>FORMAT</td></tr>
<tr><td>Cn</td><td>Т╠дТ─ъТ╡┴Те│Тб╝Те╔Те▌ТедТеєТе╚ (Unassigned)</td><td>UNASSIGNED</td></tr>
<tr><td>Co</td><td>Т╗фТ┼кТ═°Т═╤Т╬╬Т░ш (Private use)</td><td>PRIVATE_USE</td></tr>
<tr><td>Cs</td><td>Те╡ТеэТе▓Тб╝Те╚ (Surrogate)</td><td>SURROGATE</td></tr>
<tr><td>Ll</td><td>Т╛оТ╩╕Т╗·ТевТеыТе╒ТебТе┘Те├Те╚ (Lower case letter)</td><td>LOWERCASE_LETTER</td></tr>
<tr><td>Lm</td><td>Т╡╝Т╗ўТ╩╕Т╗· (Modifier letter)</td><td>MODIFIER_LETTER</td></tr>
<tr><td>Lo</td><td>Тд╜Тд╬Т┬╛Тд╬Т╩╕Т╗· (Other letter)</td><td>OTHER_LETTER</td></tr>
<tr><td>Lt</td><td>Те┐ТедТе╚ТеыТ╩╕Т╗· (Title case letter)</td><td>TITLECASE_LETTER</td></tr>
<tr><td>Lu</td><td>Т┬чТ╩╕Т╗·ТевТеыТе╒ТебТе┘Те├Те╚ (Upper case letter)</td><td>UPPERCASE_LETTER</td></tr>
<tr><td>Mc</td><td>Т╜дТ╛■Т╩╕Т╗· (Spacing mark)</td><td>COMBINING_SPACING_MARK</td></tr>
<tr><td>Me</td><td>Т┬╛Тд╬Т╩╕Т╗·ТдЄТ░╧ТдрТд┐ТдсТд╬Т╩╕Т╗· (Enclosing mark)</td><td>ENCLOSING_MARK</td></tr>
<tr><td>Mn</td><td>Т┬╛Тд╬Т╩╕Т╗·ТдЄТ╜дТ╛■Тд╣ТдыТд┐ТдсТд╬Т╩╕Т╗· (Non-spacing mark)</td><td>NON_SPACING_MARK</td></tr>
<tr><td>Nd</td><td>10 Т┐╩Т┐ЇТ╗· (Decimal number)</td><td>DECIMAL_DIGIT_NUMBER</td></tr>
<tr><td>Nl</td><td>Т┐ЇТ├═ТдЄТ╔╜Тд╣Т╩╕Т╗· (Letter number)</td><td>LETTER_NUMBER</td></tr>
<tr><td>No</td><td>Тд╜Тд╬Т┬╛Тд╬Т┐ЇТ╗· (Other number)</td><td>OTHER_NUMBER</td></tr>
<tr><td>Pd</td><td>Т╧вТ╖ыТ═╤Т╢чТ╞╔Т╡нТ╣ц (Connector punctuation)</td><td>DASH_PUNCTUATION</td></tr>
<tr><td>Pc</td><td>Те└Те├Те╖Тех (Dash punctuation)</td><td>CONNECTOR_PUNCTUATION</td></tr>
<tr><td>Pe</td><td>Т╩─Тд╕Т╢чТ╞╔Т╡нТ╣ц (Close punctuation)</td><td>END_PUNCTUATION</td></tr>
<tr><td>Pf</td><td>Т╦ЎТ╚°Т╢чТ╞╔Т╡нТ╣ц (Final punctuation)</td><td>FINAL_QUOTE_PUNCTUATION</td></tr>
<tr><td>Pi</td><td>Т└шТ╞мТ╢чТ╞╔Т╡нТ╣ц (Initial punctuation)</td><td>INITIAL_QUOTE_PUNCTUATION</td></tr>
<tr><td>Po</td><td>Тд╜Тд╬Т┬╛Тд╬Т╢чТ╞╔Т╡нТ╣ц (Other punctuation)</td><td>OTHER_PUNCTUATION</td></tr>
<tr><td>Ps</td><td>Т│лТднТ╢чТ╞╔Т╡нТ╣ц (Open punctuation)</td><td>START_PUNCTUATION</td></tr>
<tr><td>Sc</td><td>Т─╠Т▓▀Т╡нТ╣ц (Currency symbol)</td><td>CURRENCY_SYMBOL</td></tr>
<tr><td>Sk</td><td>Т╣чТдяТд╗Т╩╕Т╗· (Modifier symbol)</td><td>MODIFIER_SYMBOL</td></tr>
<tr><td>Sm</td><td>Т┐ЇТ│╪Т╡нТ╣ц (Mathematical symbol)</td><td>MATH_SYMBOL</td></tr>
<tr><td>So</td><td>Тд╜Тд╬Т┬╛Тд╬Т╡нТ╣ц (Other symbol)</td><td>OTHER_SYMBOL</td></tr>
<tr><td>Zl</td><td>Т╣╘Т╢шТ└┌ТдъТ╩╕Т╗· (Line separator)ТбвU+2028Тд╬Тд▀</td><td>LINE_SEPARATOR</td></tr>
<tr><td>Zp</td><td>Т├╩Т═юТ╢шТ└┌ТдъТ╩╕Т╗· (Paragraph separator)ТбвU+2029Тд╬Тд▀</td><td>PARAGRAPH_SEPARATOR</td></tr>
<tr><td>Zs</td><td>Т╢їТ╟ЄТ╩╕Т╗· (Space separator)</td><td>SPACE_SEPARATOR</td></tr>
</table>
<br>
Т╟дТ░╒Тд╬CharТдфТе│Тб╝Те╔Те▌ТедТеєТе╚ТдлТдщUnicodeТелТе╞Те┤ТеъТдЄТ╝шТ╞└Тд╣ТдыТд╦Тд╧Тбв<a href="#142charactergettype">Character.getTypeТесТе╜Те├Те╔</a>ТдЄТ╗╚Т═╤Тд╖Тд▐Тд╣Тбг
***
<h3>1.1.4ТббUnicodeТе╨ТедТе╩ТеъТбжТе╫ТеэТе╤Те╞Тег</h3>
<img src="../image/string_course.006.jpeg" width="500px"><br>
UnicodeТе╫ТеэТе╤Те╞ТегТд╬ТджТд┴ТбвТе╨ТедТе╩ТеъТ╖┐Тд╟Т─ъТ╡┴Тд╡ТдьТд╞ТддТдыТдтТд╬Тд╟Тд╣ТбгТд╜Тд╬ТджТд┴Т▓╝Т╡нТд╬ТдтТд╬ТдмJavaТд╬Т└╡Т╡мТ╔╜Т╕╜Тд╟Т─ъТ╡┴Тд╡ТдьТд╞ТддТд▐Тд╣Тбг
<table>
<tr><th>UnicodeТе╨ТедТе╩ТеъТбжТе╫ТеэТе╤Те╞Тег</th><th>Т└тТ╠└</th></tr>
<tr><td>Alphabetic</td><td>ТевТеыТе╒ТебТе┘Те├Те╚</td></tr>
<tr><td>Ideographic</td><td>Т╔╜Т░╒Т╩╕Т╗·Тб╩Т┤┴Т╗·Тд╩Тд╔Тб╦</td></tr>
<tr><td>Letter</td><td>Т╩╕Т╗·</td></tr>
<tr><td>Lowercase</td><td>lower caseТд╬Т╩╕Т╗·</td></tr>
<tr><td>Uppercase</td><td>upper caseТд╬Т╩╕Т╗·</td></tr>
<tr><td>Titlecase</td><td>title caseТд╬Т╩╕Т╗·</td></tr>
<tr><td>Punctuation</td><td>Т╢чТ╞╔Т┼└</td></tr>
<tr><td>Control</td><td>Т└йТ╕цТ╩╕Т╗·</td></tr>
<tr><td>White_Space</td><td>Т╢їТ╟ЄТ╩╕Т╗·</td></tr>
<tr><td>Digit</td><td>Т┐ЇТ╗·</td></tr>
<tr><td>Hex_Digit</td><td>16Т┐╩Т┐ЇТд╟Тд╬Т┐ЇТ╗·</td></tr>
<tr><td>Join_Control</td><td>Т╖ыТ╣чТ└йТ╕цТ╩╕Т╗·</td></tr>
<tr><td>Noncharacter_Code_Point</td><td>Т╩╕Т╗·Тд╟Тд╧Тд╩ТддТе│Тб╝Те╔Те▌ТедТеєТе╚</td></tr>
<tr><td>Assigned</td><td>Т│фТдъТ┼ЎТд╞ТдщТдьТд┐Т╩╕Т╗·</td></tr>
</table>
***
<h3>1.2Тббjava.lang.CharacterТепТещТе╣Тд╦ТдшТдыТ╩╕Т╗·Тд╬Т╗·Т╝яТ╛ЁТ╩єТд╬Т╝шТ╞└</h3>
<img src="../image/string_course.007.jpeg" width="500px"><br>
java.lang.CharacterТепТещТе╣Тд╬ТесТе╜Те├Те╔getNameТбвgetTypeТбвgetDirectionalityТд╦ТдшТдъТ╩╕Т╗·Тд╬Т╗·Т╝яТ╛ЁТ╩єТдЄТ╝шТ╞└Тд╖Тд▐Тд╣Тбг
<h4>1.2.1ТббCharacter.getName</h4>
<img src="../image/string_course.008.jpeg" width="500px"><br>
Character.getNameТесТе╜Те├Те╔Тд╧ТбвТе│Тб╝Те╔Те▌ТедТеєТе╚ТдмunassignedТд╬Т╛ьТ╣чТд╧nullТбвТд╜ТдьТ░╩Т│░Тд╧Т╝бТд╬Т╖ыТ▓╠ТдЄТ╩╓Тд╖Тд▐Тд╣Тбг
```java
Character.UnicodeBlock.of(codePoint).toString().replace('_', ' ') + " " + Integer.toHexString(codePoint).toUpperCase(Locale.ENGLISH);
```
```scala
  private val hiraganaChar: Char = 'Тдл'
  private val katakanaChar: Char = 'Тел'
  private val alphabetChar: Char = 'C'
  private val symbolChar:   Char = '+'

  private val hiraganaCodePoint: Int = Character.codePointAt(Array[Char](hiraganaChar), 0)
  private val katakanaCodePoint: Int = Character.codePointAt(Array[Char](katakanaChar), 0)
  private val alphabetCodePoint: Int = Character.codePointAt(Array[Char](alphabetChar), 0)
  private val symbolCodePoint:   Int = Character.codePointAt(Array[Char](symbolChar),   0)

  @Test
  def testCharacterClass(): Unit = {
    assert(Character.getName(hiraganaCodePoint) == "HIRAGANA LETTER KA")
    assert(Character.getName(katakanaCodePoint) == "KATAKANA LETTER KA")
    assert(Character.getName(alphabetCodePoint) == "LATIN CAPITAL LETTER C")
    assert(Character.getName(symbolCodePoint)   == "PLUS SIGN")
  }
```
***
<h4>1.2.2ТббCharacter.getType</h4>
<img src="../image/string_course.009.jpeg" width="500px"><br>
Character.getTypeТесТе╜Те├Те╔Тд╧CharТдфТе│Тб╝Те╔Те▌ТедТеєТе╚Тд╦Т┬╨Тд╖Тд╞<a href="#18unicodeТелТе╞Те┤Теъ">UnicodeТелТе╞Те┤Теъ</a>ТдЄТ╩╓Тд╖Тд▐Тд╣Тбг
```scala
  private val hiraganaChar: Char = 'Тдл'
  private val katakanaChar: Char = 'Тел'
  private val alphabetChar: Char = 'C'
  private val symbolChar:   Char = '+'

  private val hiraganaCodePoint: Int = Character.codePointAt(Array[Char](hiraganaChar), 0)
  private val katakanaCodePoint: Int = Character.codePointAt(Array[Char](katakanaChar), 0)
  private val alphabetCodePoint: Int = Character.codePointAt(Array[Char](alphabetChar), 0)
  private val symbolCodePoint:   Int = Character.codePointAt(Array[Char](symbolChar),   0)
  
  @Test
  def testCharacterType(): Unit = {
    //index order
    assert( 0 == Character.UNASSIGNED)
    assert( 1 == Character.UPPERCASE_LETTER)
    assert( 2 == Character.LOWERCASE_LETTER)
    assert( 3 == Character.TITLECASE_LETTER)
    assert( 4 == Character.MODIFIER_LETTER)
    assert( 5 == Character.OTHER_LETTER)
    assert( 6 == Character.NON_SPACING_MARK)
    assert( 7 == Character.ENCLOSING_MARK)
    assert( 8 == Character.COMBINING_SPACING_MARK)
    assert( 9 == Character.DECIMAL_DIGIT_NUMBER)
    assert(10 == Character.LETTER_NUMBER)
    assert(11 == Character.OTHER_NUMBER)
    assert(12 == Character.SPACE_SEPARATOR)
    assert(13 == Character.LINE_SEPARATOR)
    assert(14 == Character.PARAGRAPH_SEPARATOR)
    assert(15 == Character.CONTROL)
    assert(16 == Character.FORMAT)
    //17?
    assert(18 == Character.PRIVATE_USE)
    assert(19 == Character.SURROGATE)
    assert(20 == Character.DASH_PUNCTUATION)
    assert(21 == Character.START_PUNCTUATION)
    assert(22 == Character.END_PUNCTUATION)
    assert(23 == Character.CONNECTOR_PUNCTUATION)
    assert(24 == Character.OTHER_PUNCTUATION)
    assert(25 == Character.MATH_SYMBOL)
    assert(26 == Character.CURRENCY_SYMBOL)
    assert(27 == Character.MODIFIER_SYMBOL)
    assert(28 == Character.OTHER_SYMBOL)
    assert(29 == Character.INITIAL_QUOTE_PUNCTUATION)
    assert(30 == Character.FINAL_QUOTE_PUNCTUATION)

    //alphabetical order
    assert( 8 == Character.COMBINING_SPACING_MARK)
    assert(23 == Character.CONNECTOR_PUNCTUATION)
    assert(15 == Character.CONTROL)
    assert(26 == Character.CURRENCY_SYMBOL)
    assert(20 == Character.DASH_PUNCTUATION)
    assert( 9 == Character.DECIMAL_DIGIT_NUMBER)
    assert( 7 == Character.ENCLOSING_MARK)
    assert(22 == Character.END_PUNCTUATION)
    assert(30 == Character.FINAL_QUOTE_PUNCTUATION)
    assert(16 == Character.FORMAT)
    assert(29 == Character.INITIAL_QUOTE_PUNCTUATION)
    assert(10 == Character.LETTER_NUMBER)
    assert(13 == Character.LINE_SEPARATOR)
    assert( 2 == Character.LOWERCASE_LETTER)
    assert(25 == Character.MATH_SYMBOL)
    assert( 4 == Character.MODIFIER_LETTER)
    assert(27 == Character.MODIFIER_SYMBOL)
    assert( 6 == Character.NON_SPACING_MARK)
    assert( 5 == Character.OTHER_LETTER)
    assert(11 == Character.OTHER_NUMBER)
    assert(24 == Character.OTHER_PUNCTUATION)
    assert(28 == Character.OTHER_SYMBOL)
    assert(14 == Character.PARAGRAPH_SEPARATOR)
    assert(18 == Character.PRIVATE_USE)
    assert(12 == Character.SPACE_SEPARATOR)
    assert(21 == Character.START_PUNCTUATION)
    assert(19 == Character.SURROGATE)
    assert( 3 == Character.TITLECASE_LETTER)
    assert( 0 == Character.UNASSIGNED)
    assert( 1 == Character.UPPERCASE_LETTER)

    //Char
    assert(Character.getType(hiraganaChar) == Character.OTHER_LETTER)
    assert(Character.getType(katakanaChar) == Character.OTHER_LETTER)
    assert(Character.getType(alphabetChar) == Character.UPPERCASE_LETTER)
    assert(Character.getType(symbolChar)   == Character.MATH_SYMBOL)

    //Те│Тб╝Те╔Те▌ТедТеєТе╚
    assert(Character.getType(hiraganaCodePoint) == Character.OTHER_LETTER)
    assert(Character.getType(katakanaCodePoint) == Character.OTHER_LETTER)
    assert(Character.getType(alphabetCodePoint) == Character.UPPERCASE_LETTER)
    assert(Character.getType(symbolCodePoint)   == Character.MATH_SYMBOL)
  }
```
***
<h4>1.2.3ТббCharacter.getDirectionality</h4>
<img src="../image/string_course.010.jpeg" width="500px"><br>
Character.getDirectionalityТд╧Т╩╕Т╗·Тд╬Т╩¤Т╕■Т└нТб╩Т┴╨Т╩¤Т╕■Т╩╕Т╗·Те┐ТедТе╫Тб╦ТдЄТ╝шТ╞└Тд╣ТдыТд┐ТдсТд╦Т╗╚Т═╤Тд╖Тд▐Тд╣ТбгТ╩╕Т╗·Тд╬Т╩¤Т╕■Т└нТд╚ТддТджТд╬Тд╧ТбвТ╬уТдиТд╨ТбвТ╞№Т╦▄Т╕ьТд╬Т╩╕Т╗·Тд╧Тб╓Т║╕ТдлТдщТ▒жТд╦Т╔╜Т╝иТд╣ТдыТб╫Тд╚ТддТд├Тд┐Т╛ЁТ╩єТд╬Тд│Тд╚Тд╟Тд╣Тбг<br>
rf. <a href="http://unicode.org/reports/tr44/#Bidi_Class_Values" target="_blank">5.7.2 Bidirectional Class Values - UnicodeБо Standard Annex #44 UNICODE CHARACTER DATABASE</a>
<table>
<tr><th colspan="2">Т┴╨Т╩¤Т╕■Т╩╕Т╗·Те┐ТедТе╫</th><th>java.lang.Character</th></tr>
<tr><td>AN</td><td>Т╝хТддТ┴╨Т╩¤Т╕■Т╩╕Т╗·Те┐ТедТе╫</td><td>DIRECTIONALITY_ARABIC_NUMBER</td></tr>
<tr><td>BN</td><td>Т╝хТддТ┴╨Т╩¤Т╕■Т╩╕Т╗·Те┐ТедТе╫</td><td>DIRECTIONALITY_BOUNDARY_NEUTRAL</td></tr>
<tr><td>CS</td><td>Т╝хТддТ┴╨Т╩¤Т╕■Т╩╕Т╗·Те┐ТедТе╫</td><td>DIRECTIONALITY_COMMON_NUMBER_SEPARATOR</td></tr>
<tr><td>EN</td><td>Т╝хТддТ┴╨Т╩¤Т╕■Т╩╕Т╗·Те┐ТедТе╫</td><td>DIRECTIONALITY_EUROPEAN_NUMBER</td></tr>
<tr><td>ES</td><td>Т╝хТддТ┴╨Т╩¤Т╕■Т╩╕Т╗·Те┐ТедТе╫</td><td>DIRECTIONALITY_EUROPEAN_NUMBER_SEPARATOR</td></tr>
<tr><td>ET</td><td>Т╝хТддТ┴╨Т╩¤Т╕■Т╩╕Т╗·Те┐ТедТе╫</td><td>DIRECTIONALITY_EUROPEAN_NUMBER_TERMINATOR</td></tr>
<tr><td>L</td><td>Т╢пТ╬╧Тд╩Т┴╨Т╩¤Т╕■Т╩╕Т╗·Те┐ТедТе╫</td><td>DIRECTIONALITY_LEFT_TO_RIGHT</td></tr>
<tr><td>LRE</td><td>Т╢пТ╬╧Тд╩Т┴╨Т╩¤Т╕■Т╩╕Т╗·Те┐ТедТе╫Тб╩U+202AТб╦</td><td>DIRECTIONALITY_LEFT_TO_RIGHT_EMBEDDING</td></tr>
<tr><td>LRO</td><td>Т╢пТ╬╧Тд╩Т┴╨Т╩¤Т╕■Т╩╕Т╗·Те┐ТедТе╫Тб╩U+202DТб╦</td><td>DIRECTIONALITY_LEFT_TO_RIGHT_OVERRIDE</td></tr>
<tr><td>NSM</td><td>Т╝хТддТ┴╨Т╩¤Т╕■Т╩╕Т╗·Те┐ТедТе╫</td><td>DIRECTIONALITY_NONSPACING_MARK</td></tr>
<tr><td>ON</td><td>Те╦ТехТб╝Те╚ТещТеыТд╩Т┴╨Т╩¤Т╕■Т╩╕Т╗·Те┐ТедТе╫</td><td>DIRECTIONALITY_OTHER_NEUTRALS</td></tr>
<tr><td>B</td><td>Те╦ТехТб╝Те╚ТещТеыТд╩Т┴╨Т╩¤Т╕■Т╩╕Т╗·Те┐ТедТе╫</td><td>DIRECTIONALITY_PARAGRAPH_SEPARATOR</td></tr>
<tr><td>PDF</td><td>Т╝хТддТ┴╨Т╩¤Т╕■Т╩╕Т╗·Те┐ТедТе╫Тб╩U+202CТб╦</td><td>DIRECTIONALITY_POP_DIRECTIONAL_FORMAT</td></tr>
<tr><td>R</td><td>Т╢пТ╬╧Тд╩Т┴╨Т╩¤Т╕■Т╩╕Т╗·Те┐ТедТе╫</td><td>DIRECTIONALITY_RIGHT_TO_LEFT</td></tr>
<tr><td>AL</td><td>Т╢пТ╬╧Тд╩Т┴╨Т╩¤Т╕■Т╩╕Т╗·Те┐ТедТе╫</td><td>DIRECTIONALITY_RIGHT_TO_LEFT_ARABIC</td></tr>
<tr><td>RLE</td><td>Т╢пТ╬╧Тд╩Т┴╨Т╩¤Т╕■Т╩╕Т╗·Те┐ТедТе╫Тб╩U+202BТб╦</td><td>DIRECTIONALITY_RIGHT_TO_LEFT_EMBEDDING</td></tr>
<tr><td>RLO</td><td>Т╢пТ╬╧Тд╩Т┴╨Т╩¤Т╕■Т╩╕Т╗·Те┐ТедТе╫Тб╩U+202EТб╦</td><td>DIRECTIONALITY_RIGHT_TO_LEFT_OVERRIDE</td></tr>
<tr><td>S</td><td>Те╦ТехТб╝Те╚ТещТеыТд╩Т┴╨Т╩¤Т╕■Т╩╕Т╗·Те┐ТедТе╫</td><td>DIRECTIONALITY_SEGMENT_SEPARATOR</td></tr>
<tr><td>&nbsp;</td><td>Т╠дТ─ъТ╡┴Тд╬Т┴╨Т╩¤Т╕■Т╩╕Т╗·Те┐ТедТе╫</td><td>DIRECTIONALITY_UNDEFINED</td></tr>
<tr><td>WS</td><td>Те╦ТехТб╝Те╚ТещТеыТд╩Т┴╨Т╩¤Т╕■Т╩╕Т╗·Те┐ТедТе╫</td><td>DIRECTIONALITY_WHITESPACE</td></tr>
</table>

```scala
  private val hiraganaChar: Char = 'Тдл'
  private val katakanaChar: Char = 'Тел'
  private val alphabetChar: Char = 'C'
  private val symbolChar:   Char = '+'

  private val hiraganaCodePoint: Int = Character.codePointAt(Array[Char](hiraganaChar), 0)
  private val katakanaCodePoint: Int = Character.codePointAt(Array[Char](katakanaChar), 0)
  private val alphabetCodePoint: Int = Character.codePointAt(Array[Char](alphabetChar), 0)
  private val symbolCodePoint:   Int = Character.codePointAt(Array[Char](symbolChar),   0)

  @Test
  def testCharacterDirectionality(): Unit = {
    //index order
    assert((-1: Byte) == Character.DIRECTIONALITY_UNDEFINED)
    assert(( 0: Byte) == Character.DIRECTIONALITY_LEFT_TO_RIGHT)
    assert(( 1: Byte) == Character.DIRECTIONALITY_RIGHT_TO_LEFT)
    assert(( 2: Byte) == Character.DIRECTIONALITY_RIGHT_TO_LEFT_ARABIC)
    assert(( 3: Byte) == Character.DIRECTIONALITY_EUROPEAN_NUMBER)
    assert(( 4: Byte) == Character.DIRECTIONALITY_EUROPEAN_NUMBER_SEPARATOR)
    assert(( 5: Byte) == Character.DIRECTIONALITY_EUROPEAN_NUMBER_TERMINATOR)
    assert(( 6: Byte) == Character.DIRECTIONALITY_ARABIC_NUMBER)
    assert(( 7: Byte) == Character.DIRECTIONALITY_COMMON_NUMBER_SEPARATOR)
    assert(( 8: Byte) == Character.DIRECTIONALITY_NONSPACING_MARK)
    assert(( 9: Byte) == Character.DIRECTIONALITY_BOUNDARY_NEUTRAL)
    assert((10: Byte) == Character.DIRECTIONALITY_PARAGRAPH_SEPARATOR)
    assert((11: Byte) == Character.DIRECTIONALITY_SEGMENT_SEPARATOR)
    assert((12: Byte) == Character.DIRECTIONALITY_WHITESPACE)
    assert((13: Byte) == Character.DIRECTIONALITY_OTHER_NEUTRALS)
    assert((14: Byte) == Character.DIRECTIONALITY_LEFT_TO_RIGHT_EMBEDDING)
    assert((15: Byte) == Character.DIRECTIONALITY_LEFT_TO_RIGHT_OVERRIDE)
    assert((16: Byte) == Character.DIRECTIONALITY_RIGHT_TO_LEFT_EMBEDDING)
    assert((17: Byte) == Character.DIRECTIONALITY_RIGHT_TO_LEFT_OVERRIDE)
    assert((18: Byte) == Character.DIRECTIONALITY_POP_DIRECTIONAL_FORMAT)

    //alphabetical order
    assert(( 6: Byte) == Character.DIRECTIONALITY_ARABIC_NUMBER)
    assert(( 9: Byte) == Character.DIRECTIONALITY_BOUNDARY_NEUTRAL)
    assert(( 7: Byte) == Character.DIRECTIONALITY_COMMON_NUMBER_SEPARATOR)
    assert(( 3: Byte) == Character.DIRECTIONALITY_EUROPEAN_NUMBER)
    assert(( 4: Byte) == Character.DIRECTIONALITY_EUROPEAN_NUMBER_SEPARATOR)
    assert(( 5: Byte) == Character.DIRECTIONALITY_EUROPEAN_NUMBER_TERMINATOR)
    assert(( 0: Byte) == Character.DIRECTIONALITY_LEFT_TO_RIGHT)
    assert((14: Byte) == Character.DIRECTIONALITY_LEFT_TO_RIGHT_EMBEDDING)
    assert((15: Byte) == Character.DIRECTIONALITY_LEFT_TO_RIGHT_OVERRIDE)
    assert(( 8: Byte) == Character.DIRECTIONALITY_NONSPACING_MARK)
    assert((13: Byte) == Character.DIRECTIONALITY_OTHER_NEUTRALS)
    assert((10: Byte) == Character.DIRECTIONALITY_PARAGRAPH_SEPARATOR)
    assert((18: Byte) == Character.DIRECTIONALITY_POP_DIRECTIONAL_FORMAT)
    assert(( 1: Byte) == Character.DIRECTIONALITY_RIGHT_TO_LEFT)
    assert(( 2: Byte) == Character.DIRECTIONALITY_RIGHT_TO_LEFT_ARABIC)
    assert((16: Byte) == Character.DIRECTIONALITY_RIGHT_TO_LEFT_EMBEDDING)
    assert((17: Byte) == Character.DIRECTIONALITY_RIGHT_TO_LEFT_OVERRIDE)
    assert((11: Byte) == Character.DIRECTIONALITY_SEGMENT_SEPARATOR)
    assert((-1: Byte) == Character.DIRECTIONALITY_UNDEFINED)
    assert((12: Byte) == Character.DIRECTIONALITY_WHITESPACE)

    //Char
    assert(Character.getDirectionality(hiraganaChar) == Character.DIRECTIONALITY_LEFT_TO_RIGHT)
    assert(Character.getDirectionality(katakanaChar) == Character.DIRECTIONALITY_LEFT_TO_RIGHT)
    assert(Character.getDirectionality(alphabetChar) == Character.DIRECTIONALITY_LEFT_TO_RIGHT)
    assert(Character.getDirectionality(symbolChar)   == Character.DIRECTIONALITY_EUROPEAN_NUMBER_SEPARATOR)

    //Те│Тб╝Те╔Те▌ТедТеєТе╚
    assert(Character.getDirectionality(hiraganaCodePoint) == Character.DIRECTIONALITY_LEFT_TO_RIGHT)
    assert(Character.getDirectionality(katakanaCodePoint) == Character.DIRECTIONALITY_LEFT_TO_RIGHT)
    assert(Character.getDirectionality(alphabetCodePoint) == Character.DIRECTIONALITY_LEFT_TO_RIGHT)
    assert(Character.getDirectionality(symbolCodePoint)   == Character.DIRECTIONALITY_EUROPEAN_NUMBER_SEPARATOR)
  }
```

***
<h3>1.3Тббjava.lang.CharacterТепТещТе╣Тд╦ТдшТдыТ╩╕Т╗·Тд╬Т╗·Т╝яТ╚╜Т─ъ</h3>
<img src="../image/string_course.011.jpeg" width="500px"><br>
CharacterТепТещТе╣Тд╬ТесТе╜Те├Те╔Тд╟Т╗·Т╝яТд╬Т╚╜Т─ъТдЄТ╣╘ТддТд▐Тд╣ТбгТ░·Т┐ЇТд╧CharТд╟ТдтТе│Тб╝Те╔Те▌ТедТеєТе╚Тб╩IntТб╦Тд╟ТдтТ▓─Тд╟Тд╣ТбгТд┐Тд└Тд╖Т░·Т┐ЇТдмCharТд└Тд╚CharТд╦Тд╧BMPТ╬╬Т░шТд╬Т╩╕Т╗·Тд╖ТдлТ│╩Т╟╝Тд╟ТднТд╩ТддТд╬Тд╟ТбвТ╩фТ╜їТ╩╕Т╗·Тд╧Т╚╜Т─ъТд╟ТднТд▐Тд╗ТдєТбг
<table>
<tr><th>java.lang.CharacterТд╬Т╗·Т╝яТ╚╜Т─ъТесТе╜Те├Те╔</th><th>Т└тТ╠└</th></tr>
<tr><td>isDefined</td><td>UnicodeТд╟Т─ъТ╡┴Тд╡ТдьТд╞ТддТдыТбг</td></tr>
<tr><td>isDigit</td><td><strong>Т╚╛Т│╤Т┐ЇТ╗·ТбжТ┴┤Т│╤Т┐ЇТ╗·Тд╩Тд╔</strong>Тд╬Т┐ЇТ╗·Тд╟ТдвТдыТбг<br><strong>Тб╓Тб╗Тб╫Т░╩Т│░Тд╬Т┤┴Т┐ЇТ╗·Тд╧Т┐ЇТ╗·Тд╚Тд╖Тд╞Т╚╜Т─ъТд╡ТдьТд╩ТддТбг</strong><br>Тб╩Character.getType(codePoint)ТдмDECIMAL_DIGIT_NUMBERТд╟ТдвТдыТбгТб╦</td></tr>
<tr><td>isLetter</td><td>Т╚╞Т═╤Т╩╕Т╗·Тд╟ТдвТдыТбг<br>Тб╩Character.getType(codePoint)ТдмUPPERCASE_LETER, LOWERCASE_LETTER, TITLECASE_LETTER, MODIFIER_LETTER, OTHER_LETTERТд╬ТддТд║ТдьТдлТд╟ТдвТдыТбгТб╦</td></tr>
<tr><td>isLetterOrDigit</td><td>Character.isLetterТд▐Тд┐Тд╧Character.isDigit</td></tr>
<tr><td>isLowerCase</td><td>Т╛оТ╩╕Т╗·Тд╟ТдвТдыТбгCharacter.getType(codePoint)ТдмLOWERCASE_LETTERТд╟ТдвТдыТдлТбвUnicodeТ╔╕Т╜рТд╟Т╡мТ─ъТд╡ТдьТд┐Т┤єТ═┐Те╫ТеэТе╤Те╞ТегOther_LowercaseТдЄТ╗¤Тд─Тбг</td></tr>
<tr><td>isTitleCase</td><td>Те┐ТедТе╚ТеыТе▒Тб╝Те╣Т╩╕Т╗·Тд╟ТдвТдыТбгCharacter.getType(codePoint)ТдмTITLECASE_LETTERТд╟ТдвТдыТбг</td></tr>
<tr><td>isUpperCase</td><td>Т┬чТ╩╕Т╗·Тд╟ТдвТдыТбгCharacter.getType(codePoint)ТдмUPPERCASE_LETTERТд╟ТдвТдыТдлТбвUnicodeТ╔╕Т╜рТд╟Т╡мТ─ъТд╡ТдьТд┐Т┤єТ═┐Те╫ТеэТе╤Те╞ТегOther_UppercaseТдЄТ╗¤Тд─Тбг</td></tr>
<tr><td>isSpaceChar</td><td>UnicodeТ╔╕Т╜рТд╬Т╢їТ╟ЄТ╩╕Т╗·Тд╟ТдвТдыТбгCharacter.getType(codePoint)ТдмSPACE_SEPARATOR, LINE_SEPARATOR, PARAGRAPH_SEPARATORТд╬ТддТд║ТдьТдлТд╟ТдвТдыТбг</td></tr>
<tr><td>isWhiteSpace</td><td>Т╢їТ╟ЄТ╩╕Т╗·Тд╟ТдвТдыТбгТ╝бТд╬ТддТд║ТдьТдлТдЄТ╦■Тд┐Тд╣Т╛ьТ╣чТбвТ╢їТ╟ЄТ╩╕Т╗·Тд╚Тд▀Тд╩Тд╡ТдьТд▐Тд╣Тбг
<ul>
<li>Unicode Тд╬Т╢їТ╟ЄТ╩╕Т╗· (SPACE_SEPARATORТбвLINE_SEPARATORТбвТд▐Тд┐Тд╧ PARAGRAPH_SEPARATOR) Тд╟ТдвТдыТдмТбвТ▓■Т╣╘Тд╩Тд╖Тд╬Т╢їТ╟Є ('\u00A0'Тбв'\u2007'Тбв'\u202F') Тд╟Тд╧Тд╩ТддТбг</li>
<li>'\t' (U+0009 Т┐хТ╩┐Те┐Те╓) Тд╟ТдвТды</li>
<li>'\n' (U+000A Т▓■Т╣╘) Тд╟ТдвТдыТбг</li>
<li>'\u000B' (U+000B Т┐тТ─╛Те┐Те╓) Тд╟ТдвТды</li>
<li>'\f' (U+000C Те╒ТейТб╝ТерТе╒ТегТб╝Те╔) Тд╟ТдвТдыТбг</li>
<li>'\r' (U+000D Т╔№Т╡в) Тд╟ТдвТдыТбг</li>
<li>'\u001C' (U+001C Те╒ТебТедТеыТ╢шТ└┌ТдъТ╩╕Т╗·) Тд╟ТдвТдыТбг</li>
<li>'\u001D' (U+001D Те░ТеыТб╝Те╫Т╢шТ└┌ТдъТ╩╕Т╗·) Тд╟ТдвТдыТбг</li>
<li>'\u001E' (U+001E ТеьТе│Тб╝Те╔Т╢шТ└┌ТдъТ╩╕Т╗·) Тд╟ТдвТдыТбг</li>
<li>'\u001F' (U+001F Т├▒Т░╠Т╢шТ└┌ТдъТ╩╕Т╗·) Тд╟ТдвТдыТбг</li>
</ul>
</td></tr>
<tr><td>isMirrored</td><td>Unicode Т╗┼Т══Тд╦Т╜╛Тд├Тд╞ТбвТ╗╪Т─ъТд╡ТдьТд┐Т╩╕Т╗· (Unicode Те│Тб╝Те╔Те▌ТедТеєТе╚) ТдЄТе▀ТещТб╝Т▓╜Тд╣ТдыТдлТд╔ТджТдлТдЄТ╚╜Т─ъТд╖Тд▐Тд╣ТбгТе╞ТенТе╣Те╚Т╞тТд╟Т▒жТдлТдщТ║╕Тд╦Т╩╕Т╗·ТдмТ╔┴Т▓шТд╡ТдьТдыТ╛ьТ╣чТбвТ╩╕Т╗·Тд╬Те▀ТещТб╝Т▓╜Тд╦ТдшТдъТбвТе░ТеъТе╒ТдмТ┐хТ╩┐Т╩¤Т╕■Тд╦Те▀ТещТб╝Т▓╜Тд╡ТдьТд▐Тд╣ТбгТд┐Тд╚ТдиТд╨Тбв'\u0028' LEFT PARENTHESIS Тд╧ТбвТе╗Те▐ТеєТе╞ТегТепТе╣Тд╟Тд╧Т│лТднТ│чТ╕╠Тд╚Тд╖Тд╞Т─ъТ╡┴Тд╡ТдьТд╞ТддТд▐Тд╣ТбгТд│ТдьТд╧ТбвТ║╕ТдлТдщТ▒жТд╦Т╔┴Т▓шТд╡ТдьТдыТе╞ТенТе╣Те╚Тд╟Тд╧Тб╓(Тб╫Тд╦Тд╩ТдъТбвТ▒жТдлТдщТ║╕Тд╦Т╔┴Т▓шТд╡ТдьТдыТе╞ТенТе╣Те╚Тд╟Тд╧Тб╓)Тб╫Тд╦Тд╩ТдъТд▐Тд╣Тбг</td></tr>
<tr><td>isISOControl</td><td>Т╗▓Т╛╚Тд╡ТдьТд┐Т╩╕Т╗· (Unicode Те│Тб╝Те╔Те▌ТедТеєТе╚) Тдм ISO Т└йТ╕цТ╩╕Т╗·ТдлТд╔ТджТдлТдЄТ╚╜Т─ъТд╖Тд▐Тд╣ТбгТе│Тб╝Те╔Тдм '\u0000' - '\u001F' Тд╬Т╚╧Т░╧ТбвТд▐Тд┐Тд╧ '\u007F' - '\u009F' Тд╬Т╚╧Т░╧Тд╬Т╛ьТ╣чТд╧ТбвISO Т└йТ╕цТ╩╕Т╗·Тд╚Т╕лТд╩Тд╡ТдьТд▐Тд╣Тбг</td></tr>
<tr><td>isIdentifierIgnorable</td><td>Т╗╪Т─ъТд╡ТдьТд┐Т╩╕Т╗· (Unicode Те│Тб╝Те╔Те▌ТедТеєТе╚) ТдмТбвJava Т╝▒Т╩╠Т╗╥Тд▐Тд┐Тд╧ Unicode Т╝▒Т╩╠Т╗╥Т╞тТд╟Т╠╡Т╗ыТ▓─Т╟╜Тд╩Т╩╕Т╗·ТдлТд╔ТджТдлТдЄТ╚╜Т─ъТд╖Тд▐Тд╣ТбгТ╝бТд╬ Unicode Т╩╕Т╗·Тд╧ТбвJava Т╝▒Т╩╠Т╗╥Тдф Unicode Т╝▒Т╩╠Т╗╥Т╞тТд╟Т╠╡Т╗ыТд╟ТднТд▐Тд╣Тбг
<ul><li>Т╢їТ╟ЄТ░╩Т│░Тд╬ ISO Т└йТ╕цТ╩╕Т╗·
<ul>
<li>'\u0000' - '\u0008'</li>
<li>'\u000E' - '\u001B'</li>
<li>'\u007F' - '\u009F'</li>
</ul></li>
<li>Character.getType(codePoint)ТдмFORMATТд╟ТдвТдыТд╣Тд┘Тд╞Тд╬Т╩╕Т╗·</li>
</ul>
</td></tr>
<tr><td>isUnicodeIdentifierStart</td><td>Т╗╪Т─ъТд╡ТдьТд┐Т╩╕Т╗· (Unicode Те│Тб╝Те╔Те▌ТедТеєТе╚) ТдЄ Unicode Т╝▒Т╩╠Т╗╥Тд╬Т║╟Т╜щТд╬Т╩╕Т╗·Тд╚Тд╖Тд╞Т╗╪Т─ъТ▓─Т╟╜ТдлТд╔ТджТдлТдЄТ╚╜Т─ъТд╖Тд▐Тд╣ТбгТ╝бТд╬Т╛ЄТ╖яТд╬Тд╔ТдьТдлТд╦Т┼ЎТд╞Тд╧Тд▐ТдыТ╛ьТ╣чТд╦Тд└Тд▒ТбвТд╜Тд╬Т╩╕Т╗·ТдЄ Unicode Т╝▒Т╩╠Т╗╥Тд╬Т║╟Т╜щТд╦Т╗╪Т─ъТд╟ТднТд▐Тд╣Тбг
<ul>
<li>Character.isLetter(codePoint) Тдм true ТдЄТ╩╓Тд╣Тбг</li>
<li>Character.getType(codePoint) Тдм LETTER_NUMBER ТдЄТ╩╓Тд╣Тбг</li>
</ul>
</td></tr>
<tr><td>isUnicodeIdentifierPart</td><td>Т╗╪Т─ъТд╡ТдьТд┐Т╩╕Т╗· (Unicode Те│Тб╝Те╔Те▌ТедТеєТе╚) ТдЄ Unicode Т╝▒Т╩╠Т╗╥Тд╬Т║╟Т╜щТд╬Т╩╕Т╗·Т░╩Т│░Тд╦Т╗╚Т═╤Т▓─Т╟╜ТдлТд╔ТджТдлТдЄТ╚╜Т─ъТд╖Тд▐Тд╣ТбгТ╝бТд╬Т╩╕Тд╬Тд╔ТдьТдлТд╦Т┼ЎТд╞Тд╧Тд▐ТдыТ╛ьТ╣чТд╦Тд└Тд▒ТбвТд╜Тд╬Т╩╕Т╗·ТдЄ Unicode Т╝▒Т╩╠Т╗╥Тд╬Т░ьТ╔ЇТд╦Т╗╚Т═╤Тд╟ТднТд▐Тд╣Тбг
<ul>
<li>Т╚╞Т═╤Т╩╕Т╗·Тд╟ТдвТды</li>
<li>Т╧вТ╖ыТ╢чТ╞╔Т┼└Т╩╕Т╗·Тд╟ТдвТды ('_' Тд╩Тд╔)</li>
<li>Т┐ЇТ╗·Тд╟ТдвТды</li>
<li>Т┐ЇТ├═Т╚╞Т═╤Т╩╕Т╗·Тд╟ТдвТды (ТеэТб╝Те▐Т┐ЇТ╗·Т╩╕Т╗·Тд╩Тд╔)</li>
<li>Т╧вТ╖ыТе▐Тб╝ТепТд╟ТдвТды</li>
<li>Т╚єТе╣Те┌Тб╝Те╖ТеєТе░Те▐Тб╝ТепТд╟ТдвТды</li>
<li>Тд│Тд╬Т╩╕Т╗·Тд╬ Character.isIdentifierIgnorable Тдм true ТдЄТ╩╓Тд╣Тбг</li>
</ul>
</td></tr>
<tr><td>isJavaIdentifierStart</td><td>
Т╩╕Т╗· (Unicode Те│Тб╝Те╔Те▌ТедТеєТе╚) ТдЄ Java Т╝▒Т╩╠Т╗╥Тд╬Т║╟Т╜щТд╬Т╩╕Т╗·Тд╚Тд╖Тд╞Т╗╪Т─ъТ▓─Т╟╜ТдлТд╔ТджТдлТдЄТ╚╜Т─ъТд╖Тд▐Тд╣ТбгТ╝бТд╬Т╛ЄТ╖яТд╬Тд╔ТдьТдлТд╦Т┼ЎТд╞Тд╧Тд▐ТдыТ╛ьТ╣чТд╦Тд└Тд▒ТбвТд╜Тд╬Т╩╕Т╗·ТдЄ Java Т╝▒Т╩╠Т╗╥Тд╬Т║╟Т╜щТд╦Т╗╪Т─ъТд╟ТднТд▐Тд╣Тбг
<ul>
<li>Character.isLetter(codePoint) ТдмТ╝бТдЄТ╩╓Тд╣: true</li>
<li>Character.getType(codePoint) ТдмТ╝бТдЄТ╩╓Тд╣: LETTER_NUMBER</li>
<li><u>Т╗▓Т╛╚Тд╡ТдьТдыТ╩╕Т╗·ТдмТ─╠Т▓▀Т╡нТ╣цТд╟ТдвТды ('$' Тд╩Тд╔)</u></li>
<li><u>Т╗▓Т╛╚Т╩╕Т╗·ТдмТ╧вТ╖ыТ╢чТ╞╔Т┼└Т╩╕Т╗·Тд╟ТдвТды ('_' Тд╩Тд╔)</u></li>
</ul>
</td></tr>
<tr><td>isJavaIdentifierPart</td><td>Т╩╕Т╗· (Unicode Те│Тб╝Те╔Те▌ТедТеєТе╚) ТдЄ Java Т╝▒Т╩╠Т╗╥Тд╬Т║╟Т╜щТд╬Т╩╕Т╗·Т░╩Т│░Тд╦Т╗╚Т═╤Т▓─Т╟╜ТдлТд╔ТджТдлТдЄТ╚╜Т─ъТд╖Тд▐Тд╣ТбгТ╝бТд╬Тд╔ТдьТдлТд╦Т┼ЎТд╞Тд╧Тд▐ТдыТ╛ьТ╣чТд╦Тд└Тд▒ТбвТд╜Тд╬Т╩╕Т╗·ТдЄ Java Т╝▒Т╩╠Т╗╥Тд╬Т░ьТ╔ЇТд╦Т╗╪Т─ъТд╟ТднТд▐Тд╣Тбг
<ul>
<li>Т╚╞Т═╤Т╩╕Т╗·Тд╟ТдвТды</li>
<li><u>Т─╠Т▓▀Т╡нТ╣цТд╟ТдвТды ('$' Тд╩Тд╔)</u></li>
<li>Т╧вТ╖ыТ╢чТ╞╔Т┼└Т╩╕Т╗·Тд╟ТдвТды ('_' Тд╩Тд╔)</li>
<li>Т┐ЇТ╗·Тд╟ТдвТды</li>
<li>Т┐ЇТ├═Т╚╞Т═╤Т╩╕Т╗·Тд╟ТдвТды (ТеэТб╝Те▐Т┐ЇТ╗·Т╩╕Т╗·Тд╩Тд╔)</li>
<li>Т╧вТ╖ыТе▐Тб╝ТепТд╟ТдвТды</li>
<li>Т╚єТе╣Те┌Тб╝Те╖ТеєТе░Те▐Тб╝ТепТд╟ТдвТды</li>
<li>Т╩╕Т╗·Тд╬ Character.isIdentifierIgnorable(codePoint) Тдм true ТдЄТ╩╓Тд╣Тбг</li>
</ul>
</td></tr>
</table>
***
<h3>1.4ТббТ└╡Т╡мТ╔╜Т╕╜Тд╬Т╗·Т╝яТд╦ТдшТдыТе▐Те├Те┴ТеєТе░</h3>
<img src="../image/string_course.012.jpeg" width="500px"><br>
Т└╡Т╡мТ╔╜Т╕╜Тд╦Тд╧Т╗·Т╝яТд╦Т┤╪Тд╖Тд┐Те▐Те├Те┴ТеєТе░ТдЄТ╣╘ТджТд┐ТдсТд╦ТбвPOSIXТ╩╕Т╗·ТепТещТе╣ТдфТ─ъТ╡┴Т║╤Тд▀Т╩╕Т╗·ТепТещТе╣Тб╩UnicodeТе╣ТепТеъТе╫Те╚ТбвТе╓ТеэТе├ТепТбвТелТе╞Те┤ТеъТбвТе╨ТедТе╩ТеъТбжТе╫ТеэТе╤Те╞ТегТд╩Тд╔Тб╦ТдмТ═╤Т░╒Тд╡ТдьТд╞ТддТд▐Тд╣Тбг
<h4>1.4.1ТббPOSIXТ╩╕Т╗·ТепТещТе╣(US-ASCIIТд╬Тд▀)</h4>
<img src="../image/string_course.013.jpeg" width="500px"><br>
POSIXТб╩Portable Operating System InterfaceТб╦Т╔╕Т╜рТд╦Т╜╛ТджТ╩╕Т╗·ТепТещТе╣Тд╦Тд╣Тд┘Тд╞Тд╬ASCIIТ╩╕Т╗·ТдЄТ╔╜Тд╣ASCIIТ╩╕Т╗·ТепТещТе╣ТдмТ─╔Т▓├Тд╡ТдьТд╞ТддТд▐Тд╣Тбг<br>
rf. <a href="http://pubs.opengroup.org/onlinepubs/9699919799/basedefs/V1_chap09.html" target="_blank">9.3.5 RE Bracket Expression - The Open Group Base Specifications Issue 7 IEEE Std 1003.1ЬЇїт, 2013 Edition</a>
<table>
<tr><th>ТепТещТе╣</th><th colspan="2">Те▐Те├Те┴</th></tr>
<tr><td>\p{Lower}</td><td>Т╛оТ╩╕Т╗·Тд╬Т▒╤Т╗·</td><td>[a-z]</td></tr>
<tr><td>\p{Upper}</td><td>Т┬чТ╩╕Т╗·Тд╬Т▒╤Т╗·</td><td>[A-Z]</td></tr>
<tr><td>\p{ASCII}</td><td>Тд╣Тд┘Тд╞Тд╬ASCIIТ╩╕Т╗·</td><td>[\x00-\x7F]</td></tr>
<tr><td>\p{Alpha}</td><td>Т▒╤Т╗·</td><td>[\p{Lower}\p{Upper}]</td></tr>
<tr><td>\p{Digit}</td><td>10 Т┐╩Т┐ЇТ╗·</td><td>[0-9]</td></tr>
<tr><td>\p{Alnum}</td><td>Т▒╤Т┐ЇТ╗·</td><td>[\p{Alpha}\p{Digit}]</td></tr>
<tr><td>\p{Punct}</td><td>Т╢чТ╞╔Т╩╕Т╗·</td><td>!"#$%&amp;'()*+,-./:;&lt;=&gt;?@[\]^_`{|}~Тд╬ТджТд┴Тд╬Тд╥Тд╚Тд─</td></tr>
<tr><td>\p{Graph}</td><td>Т╔╜Т╝иТд╟ТднТдыТ╩╕Т╗·</td><td>[\p{Alnum}\p{Punct}]</td></tr>
<tr><td>\p{Print}</td><td>Те╫ТеъТеєТе╚Т▓─Т╟╜Т╩╕Т╗·</td><td>[\p{Graph}\x20]</td></tr>
<tr><td>\p{Blank}</td><td>Т╢їТ╟ЄТд▐Тд┐Тд╧Те┐Те╓</td><td>[\t]</td></tr>
<tr><td>\p{Cntrl}</td><td>Т└йТ╕цТ╩╕Т╗·</td><td>[\x00-\x1F\x7F]</td></tr>
<tr><td>\p{XDigit}</td><td>16Т┐╩Т┐ЇТ╗·</td><td>[0-9a-fA-F]</td></tr>
<tr><td>\p{Space}</td><td>Т╢їТ╟ЄТ╩╕Т╗·</td><td>[\t\n\x0B\f\r]</td></tr>
</table>
***
<h4>1.4.2Тббjava.lang.CharacterТепТещТе╣(Т├▒Т╜уТд╩JavaТ╩╕Т╗·Те┐ТедТе╫)</h4>
<img src="../image/string_course.014.jpeg" width="500px"><br>
<table>
<tr><th>ТепТещТе╣</th><th>Те▐Те├Те┴</th></tr>
<tr><td>\p{javaLowerCase}</td><td>java.lang.Character.isLowerCase()Тд╚Т┼∙Т▓┴</td></tr>
<tr><td>\p{javaUpperCase}</td><td>java.lang.Character.isUpperCase()Тд╚Т┼∙Т▓┴</td></tr>
<tr><td>\p{javaWhitespace}</td><td>java.lang.Character.isWhitespace()Тд╚Т┼∙Т▓┴</td></tr>
<tr><td>\p{javaMirrored}</td><td>java.lang.Character.isMirrored()Тд╚Т┼∙Т▓┴</td></tr>
</table>
***
<h4>1.4.3ТббUnicodeТе╣ТепТеъТе╫Те╚ТбвТе╓ТеэТе├ТепТбвТелТе╞Те┤ТеъТбвТе╨ТедТе╩ТеъТбжТе╫ТеэТе╤Те╞ТегТд╬ТепТещТе╣</h4>
<img src="../image/string_course.015.jpeg" width="500px"><br>
UnicodeТе╓ТеэТе├ТепТд╦Тд╧Т└▄Т╞мТ╝н"In"ТбвТе╨ТедТе╩ТеъТбжТе╫ТеэТе╤Те╞ТегТд╦Тд╧Т└▄Т╞мТ╝н"Is"ТдЄТд─Тд▒ТдыТд│Тд╚Тд╟Т─ъТ╡┴Т║╤Тд▀Т╩╕Т╗·ТепТещТе╣Тд╚Тд╖Тд╞Т└╡Т╡мТ╔╜Т╕╜Тд╟Т╡нТ╜╥Тд╟ТднТд▐Тд╣Тбг
<table>
<tr><th>ТепТещТе╣</th><th>Те▐Те├Те┴</th></tr>
<tr><td>\p{IsLatin}</td><td>Latin Т╜ёТ┬╬Т╩╕Т╗·(Те╣ТепТеъТе╫Те╚)</td></tr>
<tr><td>\p{InGreek}</td><td>Greek Те╓ТеэТе├ТепТд╬Т╩╕Т╗·(Те╓ТеэТе├Теп)</td></tr>
<tr><td>\p{Lu}</td><td>Т┬чТ╩╕Т╗·(ТелТе╞Те┤Теъ)</td></tr>
<tr><td>\p{IsAlphabetic}</td><td>Т▒╤Т╗·(Те╨ТедТе╩ТеъТбжТе╫ТеэТе╤Те╞Тег)</td></tr>
<tr><td>\p{Sc}</td><td>Т─╠Т▓▀Т╡нТ╣ц(ТелТе╞Те┤Теъ)</td></tr>
<tr><td>\P{InGreek}</td><td>ТеоТеъТе╖ТеуТ╕ьТе╓ТеэТе├ТепТ░╩Т│░Тд╬Т╩╕Т╗·(Т╚▌Т─ъ)</td></tr>
<tr><td>[\p{L}&&[^\p{Lu}]]</td><td>Т┬чТ╩╕Т╗·Т░╩Т│░Тд╬Т╩╕Т╗·(Т╕║Т╗╗)</td></tr>
</table>
***
<h4>1.4.4ТббPOSIXТ╩╕Т╗·ТепТещТе╣Тд╚Т─ъТ╡┴Т║╤Тд╬Т╩╕Т╗·ТепТещТе╣Тд╬Т╕▀Т┤╣Т└н</h4>
<img src="../image/string_course.016.jpeg" width="500px"><br>
POSIXТ╩╕Т╗·ТепТещТе╣Тд╚Т─ъТ╡┴Т║╤Тд╬Т╩╕Т╗·ТепТещТе╣Тд╧Тбв<a href="https://docs.oracle.com/javase/jp/8/docs/api/java/util/regex/Pattern.html#UNICODE_CHARACTER_CLASS" target="_blank">UNICODE_CHARACTER_CLASS</a>Те╒ТещТе░ТдмТ╗╪Т─ъТд╡ТдьТд╞ТддТдыТ╛ьТ╣чТбв<a href="http://www.unicode.org/reports/tr18/" target="_blank">UnicodeТ└╡Т╡мТ╔╜Т╕╜</a>Тд╬Т╔╒Т╧┐C: Т╕▀Т┤╣Т└нТе╫ТеэТе╤Те╞ТегТд╬Т┤лТ╣ЁТд╦Т┼мТ╣чТд╖Тд╞ТддТд▐Тд╣Тбг
<table>
<tr><th>ТепТещТе╣</th><th colspan="2">Те▐Те├Те┴</th></tr>
<tr><td>\p{Lower}</td><td>Т╛оТ╩╕Т╗·</td><td>\p{IsLowercase}</td></tr>
<tr><td>\p{Upper}</td><td>Т┬чТ╩╕Т╗·</td><td>\p{IsUppercase}</td></tr>
<tr><td>\p{ASCII}</td><td>Тд╣Тд┘Тд╞Тд╬ASCIIТ╩╕Т╗·</td><td>[\x00-\x7F]</td></tr>
<tr><td>\p{Alpha}</td><td>Т▒╤Т╗·</td><td>\p{IsAlphabetic}</td></tr>
<tr><td>\p{Digit}</td><td>10Т┐╩Т┐ЇТ╗·</td><td>\p{IsDigit}</td></tr>
<tr><td>\p{Alnum}</td><td>Т▒╤Т┐ЇТ╗·</td><td>[\p{IsAlphabetic}\p{IsDigit}]</td></tr>
<tr><td>\p{Punct}</td><td>Т╢чТ╞╔Т┼└Т╩╕Т╗·</td><td>\p{IsPunctuation}</td></tr>
<tr><td>\p{Graph}</td><td>Т╔╜Т╝иТд╟ТднТдыТ╩╕Т╗·</td><td>[^\p{IsWhite_Space}\p{gc=Cc}\p{gc=Cs}\p{gc=Cn}]</td></tr>
<tr><td>\p{Print}</td><td>Те╫ТеъТеєТе╚Т▓─Т╟╜Т╩╕Т╗·</td><td>[\p{Graph}\p{Blank}&&[^\p{Cntrl}]]</td></tr>
<tr><td>\p{Blank}</td><td>Т╢їТ╟ЄТд▐Тд┐Тд╧Те┐Те╓</td><td>[\p{IsWhite_Space}&&[^\p{gc=Zl}\p{gc=Zp}\x0a\x0b\x0c\x0d\x85]]</td></tr>
<tr><td>\p{Cntrl}</td><td>Т└йТ╕цТ╩╕Т╗·</td><td>\p{gc=Cc}</td></tr>
<tr><td>\p{XDigit}</td><td>16Т┐╩Т┐ЇТ╗·</td><td>[\p{gc=Nd}\p{IsHex_Digit}]</td></tr>
<tr><td>\p{Space}</td><td>Т╢їТ╟ЄТ╩╕Т╗·</td><td>\p{IsWhite_Space}</td></tr>
<tr><td>\d</td><td>Т┐ЇТ╗·</td><td>\p{IsDigit}</td></tr>
<tr><td>\D</td><td>Т┐ЇТ╗·Т░╩Т│░</td><td>[^\d]</td></tr>
<tr><td>\s</td><td>Т╢їТ╟ЄТ╩╕Т╗·</td><td>\p{IsWhite_Space}</td></tr>
<tr><td>\S</td><td>Т╚єТ╢їТ╟ЄТ╩╕Т╗·</td><td>[^\s]</td></tr>
<tr><td>\w</td><td>Т├▒Т╕ьТ╣╜Т└оТ╩╕Т╗·</td><td>[\p{Alpha}\p{gc=Mn}\p{gc=Me}\p{gc=Mc}\p{Digit}\p{gc=Pc}\p{IsJoin_Control}]</td></tr>
<tr><td>\W</td><td>Т╚єТ├▒Т╕ьТ╩╕Т╗·</td><td>[^\w]</td></tr>
</table>
***
<h4>1.4.5ТббТ╞№Т╦▄Т╕ьТд╬Т╗·Т╝яТд╬Те▐Те├Те┴ТеєТе░</h4>
<img src="../image/string_course.017.jpeg" width="500px"><br>
<img src="../image/string_course.018.jpeg" width="500px"><br>
Тд╥ТдщТдмТд╩
<table>
<tr><th>Т└╡Т╡мТ╔╜Т╕╜</th><th>Т└тТ╠└</th><th>Т╚╧Т░╧</th></tr>
<tr><td>\p{Hiragana}</td><td>Тд╥ТдщТдмТд╩Тб╩UnicodeТе╣ТепТеъТе╫Те╚Тб╦</td><td>[U+3040, U+309F]</td></tr>
<tr><td>\p{InHiragana}</td><td>Тд╥ТдщТдмТд╩Тб╩UnicodeТе╓ТеэТе├ТепТб╦</td><td>[U+3040, U+309F]</td></tr>
<tr><td>\p{InKanaSupplement}</td><td>Т╬ЄТ╗╦Т┼кТ▓╛Т╠╛Тб╩Т░сТд╚Т╣╛Тд╬Т▓╛Т╠╛Т╩╕Т╗·Тдм0x1B000Тд╚0x1B001Тд╦Т┬╨Т▒■Тб╦Тб╩UnicodeТе╓ТеэТе├ТепТб╦</td><td>[U+1B000, U+1B0FF]</td></tr>
</table>

ТелТе┐ТелТе╩
<table>
<tr><th>Т└╡Т╡мТ╔╜Т╕╜</th><th>Т└тТ╠└</th><th>Т╚╧Т░╧</th></tr>
<tr><td>\p{Katakana}</td><td>ТелТе┐ТелТе╩Тб╩UnicodeТе╣ТепТеъТе╫Те╚Тб╦</td><td>[U+30A0, U+30FF]</td></tr>
<tr><td>\p{InKatakana}</td><td>ТелТе┐ТелТе╩Тб╩UnicodeТе╓ТеэТе├ТепТб╦</td><td>[U+30A0, U+30FF]</td></tr>
<tr><td>\p{InKatakanaPhoneticExtensions}</td><td>ТевТедТе╠Т╕ьТд╩Тд╔Тд╬Т╦▌Т╗·Тд╦Т╗╚Т═╤Тд╣ТдыТ╛оТ╜ёТелТе┐ТелТе╩Тб╩UnicodeТе╓ТеэТе├ТепТб╦</td><td>[U+31F0, U+31FF]</td></tr>
</table>

ТеэТб╝Те▐Т╗·
<table>
<tr><th>Т└╡Т╡мТ╔╜Т╕╜</th><th>Т└тТ╠└</th><th>Т╚╧Т░╧</th></tr>
<tr><td>\p{Upper}</td><td>Т┬чТ╩╕Т╗·Тб╩POSIXТ╩╕Т╗·ТепТещТе╣Тб╦</td><td>[U+0041, U+005A]</td></tr>
<tr><td>\p{IsUppercase}</td><td>Т┬чТ╩╕Т╗·Тб╩UnicodeТе╣ТепТеъТе╫Те╚Тб╦</td><td>[U+0041, U+005A]</td></tr>
<tr><td>A-Z</td><td>Т┬чТ╩╕Т╗·</td><td>[U+0041, U+005A]</td></tr>
<tr><td>\p{Lower}</td><td>Т╛оТ╩╕Т╗·Тб╩POSIXТ╩╕Т╗·ТепТещТе╣Тб╦</td><td>[U+0061, U+007A]</td></tr>
<tr><td>\p{IsLowercase}</td><td>Т╛оТ╩╕Т╗·Тб╩UnicodeТе╣ТепТеъТе╫Те╚Тб╦</td><td>[U+0061, U+007A]</td></tr>
<tr><td>a-z</td><td>Т╛оТ╩╕Т╗·</td><td>[U+0061, U+007A]</td></tr>
</table>

ТевТещТе╙ТевТ┐ЇТ╗·
<table>
<tr><th>Т└╡Т╡мТ╔╜Т╕╜</th><th>Т└тТ╠└</th><th>Т╚╧Т░╧</th></tr>
<tr><td>\d</td><td>10Т┐╩Т┐ЇТ╗·</td><td>[U+0030, U+0039]</td></tr>
<tr><td>\p{Digit}</td><td>10Т┐╩Т┐ЇТ╗·Тб╩POSIXТ╩╕Т╗·ТепТещТе╣Тб╦</td><td>[U+0030, U+0039]</td></tr>
<tr><td>\p{IsDigit}</td><td>10Т┐╩Т┐ЇТ╗·Тб╩UnicodeТе╣ТепТеъТе╫Те╚Тб╦</td><td>[U+0030, U+0039]</td></tr>
<tr><td>0-9</td><td>10Т┐╩Т┐ЇТ╗·</td><td>[U+0030, U+0039]</td></tr>
</table>

Т┤┴Т╗·
<table>
<tr><th>Т└╡Т╡мТ╔╜Т╕╜</th><th>Т└тТ╠└</th><th>Т╚╧Т░╧</th></tr>
<tr><td>\p{Han}</td><td>Т┤┴Т╗·Тб╩UnicodeТе╣ТепТеъТе╫Те╚Тб╦</td><td>&nbsp;</td></tr>
<tr><td>\p{InCJKCompatibilityIdeographs}</td><td>CJKТ╕▀Т┤╣Т┤┴Т╗·Тб╩UnicodeТе╓ТеэТе├ТепТб╦</td><td>[U+F900, U+FAFF]</td></tr>
<tr><td>\p{InCJKCompatibilityIdeographs Supplement}</td><td>CJKТ╕▀Т┤╣Т┤┴Т╗·Т╩фТ╜їТб╩UnicodeТе╓ТеэТе├ТепТб╦</td><td>[U+2F800, U+2FA1D]</td></tr>
<tr><td>\p{InCJKRadicalsSupplement}</td><td>CJKТ╔ЇТ╝єТ╩фТ╜їТб╩UnicodeТе╓ТеэТе├ТепТб╦</td><td>[U+2E80, U+2EFF]</td></tr>
<tr><td>\p{InCJKStrokes}</td><td>CJKТд╬Т╔оТ▓шТб╩UnicodeТе╓ТеэТе├ТепТб╦</td><td>[U+31C0, U+31EF]</td></tr>
<tr><td>\p{InCJKSymbolsAndPunctuation}</td><td>CJKТ╡нТ╣цТд╚Т╢чТ╞╔Т┼└Тб╩UnicodeТе╓ТеэТе├ТепТб╦</td><td>[U+3000, U+303F]</td></tr>
<tr><td>\p{InCJKUnifiedIdeographs}</td><td>CJKТ┼¤Т╣чТ┤┴Т╗·Тб╩UnicodeТе╓ТеэТе├ТепТб╦</td><td>[U+4E00, U+9FFF]</td></tr>
<tr><td>\p{InCJKUnifiedIdeographsExtensionA}</td><td>CJKТ┼¤Т╣чТ┤┴Т╗·Т│╚Т─еAТб╩UnicodeТе╓ТеэТе├ТепТб╦</td><td>[U+3400, U+4DBF]</td></tr>
<tr><td>\p{InCJKUnifiedIdeographsExtensionB}</td><td>CJKТ┼¤Т╣чТ┤┴Т╗·Т│╚Т─еBТб╩UnicodeТе╓ТеэТе├ТепТб╦</td><td>[U+20000, U+2A6DF]</td></tr>
<tr><td>\p{InCJKUnifiedIdeographsExtensionC}</td><td>CJKТ┼¤Т╣чТ┤┴Т╗·Т│╚Т─еCТб╩UnicodeТе╓ТеэТе├ТепТб╦</td><td>[U+2A700, U+2B73F]</td></tr>
<tr><td>\p{InCJKUnifiedIdeographsExtensionD}</td><td>CJKТ┼¤Т╣чТ┤┴Т╗·Т│╚Т─еDТб╩UnicodeТе╓ТеэТе├ТепТб╦</td><td>[U+2B740, U+2B81F]</td></tr>
<tr><td>\p{InIdeographicDescriptionCharacters}</td><td>Т┤┴Т╗·Т╣╜Т└оТ╡нТ╜╥Т╩╕Т╗·Тб╩UnicodeТе╓ТеэТе├ТепТб╦</td><td>[U+2FF0, U+2FFF]</td></tr>
<tr><td>\p{InKanbun}</td><td>Т┤┴Т╩╕Тд╬Т╩╓ТдъТ┼└Тб╩UnicodeТе╓ТеэТе├ТепТб╦</td><td>[U+3190, U+319F]</td></tr>
<tr><td>\uFA0E-\uFA2D</td><td>ТелТе╩Те└Т┤┴Т╗·Тб╩IBMТ│╚Т─еТ╩╕Т╗·Тб╦</td><td>[U+FA0E, U+FA2D]</td></tr>
<tr><td>\uFA2E\uFA2F</td><td>Тд│ТдьТдщТд╬Т╗·Тд╚0x9FCCТд╧Unicode6.1ТдлТдщТ─╔Т▓├</td><td>[U+FA2E, U+FA2F]</td></tr>
<tr><td>\uFA30-\uFA6A</td><td>Т╣пТ▀цТ╩╠Т╖╟Т╗·Тб╩Тд│ТджТднТд┘Тд├Тд▒ТддТд╕Тб╦ТбжТ┐═Т╠╛Т╡ЎТ═╞Т┬╬</td><td>[U+FA30, U+FA6A]</td></tr>
<tr><td>\uFA6B-\uFA6D</td><td>ARIBТ│░Т╗·Тб╩Т╞№Т╦▄Тд╬Те╟Тб╝Те┐Т╩№Т┴ўТ═╤Тб╦</td><td>[U+FA6B, U+FA6D]</td></tr>
</table>
***
<h3>1.5ТббТ╗·Т╝яТд╬Т╩╤Т┤╣</h3>
<img src="../image/string_course.019.jpeg" width="500px"><br>
caseТ╔╒ТднТд╬ТевТеыТе╒ТебТе┘Те├Те╚ТдЄlower caseТбвtitle caseТбвupper caseТд╦Т┬╖ТдиТдыТ╩¤Т╦бТд╚ТбвТд╥ТдщТдмТд╩ТдлТдщТелТе┐ТелТе╩ТбжТелТе┐ТелТе╩ТдлТдщТд╥ТдщТдмТд╩Тд╦Т╩╤Т┤╣Тд╣ТдыТ╩¤Т╦бТд╦Тд─ТддТд╞Т└тТ╠└Тд╖Тд▐Тд╣Тбг
<h4>1.5.1Тббletter case</h4>
<img src="../image/string_course.020.jpeg" width="500px"><br>
letter caseТд╦Тд╧lower caseТбвtitle caseТбвupper caseТдмТ┬╕Т║▀Тд╖Тд▐Тд╣Тбг
<table>
<tr><th>letter case</th><th>Т╬у</th><th>Т└тТ╠└</th></tr>
<tr><td>lower case</td><td>abc</td><td>Т┴┤Т╔ЇТ╛оТ╩╕Т╗·</td></tr>
<tr><td>title case</td><td>Abc</td><td>Т└шТ╞мТ╩╕Т╗·ТдмТ┬чТ╩╕Т╗·Тд╟Т╗─ТдъТд╧Т╛оТ╩╕Т╗·<br>Тг▒Т╩╕Т╗·Тд╟Т╩гТ┐ЇТ╩╕Т╗·ТдвТдыТдшТджТд╦Т╕лТдиТдыТ╩╕Т╗·Тд╦Тд╧Тбв<br>title caseТдЄТ╗¤Тд├Тд╞ТддТдыТ╩╕Т╗·ТдмТдвТдъТд▐Тд╣Тбг<br>Т╬уТбз<ul><li>upper case:Тб╓ЬЇвзТб╫Тб╩U+01C7Тб╦</li><li>title case:Тб╓ЬЇвиТб╫Тб╩U+01C8Тб╦</li><li>lower case:Тб╓	ЬЇвйТб╫Тб╩U+01C9Тб╦</li></ul></td></tr>
<tr><td>upper case</td><td>ABC</td><td>Т┴┤Т╔ЇТ┬чТ╩╕Т╗·</td></tr>
</table>
***
<h4>1.5.2ТббТ╩╕Т╗·Тд╬letter caseТд╬Т╩╤Т┤╣</h4>
<img src="../image/string_course.021.jpeg" width="500px"><br>
CharТдфТе│Тб╝Те╔Те▌ТедТеєТе╚Тд╬letter caseТдЄjava.lang.CharacterТепТещТе╣Тд╬toUpperCaseТбвtoTitleCaseТбвtoLowerCaseТесТе╜Те├Те╔Тд╟ТддТд║ТдьТдлТ░ьТ╩¤Тд╦Т┬╖ТдиТд▐Тд╣Тбг
```scala
  private val upperCaseChar: Char = '\u01C7'//Тб╓ЬЇвзТб╫
  private val titleCaseChar: Char = '\u01C8'//Тб╓ЬЇвиТб╫
  private val lowerCaseChar: Char = '\u01C9'//Тб╓ЬЇвйТб╫

  private val upperCaseCodePoint: Int = Character.codePointAt(Array[Char](upperCaseChar), 0)
  private val titleCaseCodePoint: Int = Character.codePointAt(Array[Char](titleCaseChar), 0)
  private val lowerCaseCodePoint: Int = Character.codePointAt(Array[Char](lowerCaseChar), 0)

  @Test
  def testConverseLetterCaseOfCharacterWithChar(): Unit = {
    assert(Character.toUpperCase(upperCaseChar) == upperCaseChar)
    assert(Character.toUpperCase(titleCaseChar) == upperCaseChar)
    assert(Character.toUpperCase(lowerCaseChar) == upperCaseChar)

    assert(Character.toTitleCase(upperCaseChar) == titleCaseChar)
    assert(Character.toTitleCase(titleCaseChar) == titleCaseChar)
    assert(Character.toTitleCase(lowerCaseChar) == titleCaseChar)

    assert(Character.toLowerCase(upperCaseChar) == lowerCaseChar)
    assert(Character.toLowerCase(titleCaseChar) == lowerCaseChar)
    assert(Character.toLowerCase(lowerCaseChar) == lowerCaseChar)
  }

  @Test
  def testConverseLetterCaseOfCharacterWithCodePoint(): Unit = {
    assert(Character.toUpperCase(upperCaseCodePoint) == upperCaseChar)
    assert(Character.toUpperCase(titleCaseCodePoint) == upperCaseChar)
    assert(Character.toUpperCase(lowerCaseCodePoint) == upperCaseChar)

    assert(Character.toTitleCase(upperCaseCodePoint) == titleCaseChar)
    assert(Character.toTitleCase(titleCaseCodePoint) == titleCaseChar)
    assert(Character.toTitleCase(lowerCaseCodePoint) == titleCaseChar)

    assert(Character.toLowerCase(upperCaseCodePoint) == lowerCaseChar)
    assert(Character.toLowerCase(titleCaseCodePoint) == lowerCaseChar)
    assert(Character.toLowerCase(lowerCaseCodePoint) == lowerCaseChar)
  }
```
***
<h4>1.5.3ТббТ╩╕Т╗·Т╬єТд╬letter caseТд╬Т╩╤Т┤╣</h4>
<img src="../image/string_course.022.jpeg" width="500px"><br>
StringТд╬letter caseТдЄtoUpperCaseТбвtoLowerCaseТесТе╜Те├Те╔Тд╟Т░ьТ╩¤Тд╦Т┬╖ТдиТд▐Тд╣Тбг
```scala
  private val locale: Locale = Locale.JAPAN

  @Test
  def testConverseLetterCaseOfString(): Unit = {
    val letterCase: String = "letter Case string"

    assert(letterCase.toUpperCase         == "LETTER CASE STRING")
    assert(letterCase.toUpperCase(locale) == "LETTER CASE STRING")

    assert(letterCase.toLowerCase         == "letter case string")
    assert(letterCase.toLowerCase(locale) == "letter case string")

    //Т╩╕Т╗·Т╬єТд╬Тг▒Т╩╕Т╗·Т╠▄ТдЄТ┬чТ╩╕Т╗·Тд╦Тд╣Тды
    assert(letterCase.capitalize == "Letter Case string")
  }
```
***
<h4>1.5.4ТббТд╥ТдщТдмТд╩Тд╚ТелТе┐ТелТе╩Тд╬Т┴ъТ╕▀Т╩╤Т┤╣Тб╩Т╝лТ║юТб╦</h4>
<img src="../image/string_course.023.jpeg" width="500px"><br>
Т╝лТ║юТд╬JapaneseCharacterCaseConverterТд╧ТбвТд╥ТдщТдмТд╩Тд╚ТелТе┐ТелТе╩Тд╬Те│Тб╝Те╔Те▌ТедТеєТе╚Тд╬Т║╣Т╩мТдЄТ═°Т═╤Тд╖Тд╞Тд╥ТдщТдмТд╩Тд╚ТелТе┐ТелТе╩Тд╬Т┴ъТ╕▀Т╩╤Т┤╣ТдЄТ╝┬Т╣╘Тд╖Тд▐Тд╣Тбг
<a href="https://github.com/ynupc/scalastringcourseday7/blob/master/src/test/scala/text/JapaneseCharacterCaseConverter.scala" target="_blank">JapaneseCharacterCaseConverterТд╬Т╝┬Т┴ї</a>Тбг
Т╜шТ═¤Тд╦Т╗╚Т═╤Тд╣ТдыТд╬NormalizedStringOptionТбвNormalizedStringТбвStringOptionТд╦Тд─ТддТд╞Тд╧Т╝бТ╛╧Тд╟Т└тТ╠└Тд╖Тд▐Тд╣Тбг
```scala
  private val nullPoGa: NormalizedStringOption = NormalizedStringOption(NormalizedString(StringOption("Тб╓Тд╠ТдыТд▌Тб╫Тб╓ТемТе├Тб╫")))

  @Test
  def testKatakana2Hiragana(): Unit = {
    assert(JapaneseCharacterCaseConverter.convertKatakana2Hiragana(nullPoGa).get.toString == "Тб╓Тд╠ТдыТд▌Тб╫Тб╓ТдмТд├Тб╫")
  }

  @Test
  def testHiragana2Katakana(): Unit = {
    assert(JapaneseCharacterCaseConverter.convertHiragana2Katakana(nullPoGa).get.toString == "Тб╓Те╠ТеыТе▌Тб╫Тб╓ТемТе├Тб╫")
  }
```
***
<h3>Те│ТещТерТбзТе▐ТеыТе┴Те╨ТедТе╚Т╩╕Т╗·Тд╬Те▐Те├Те┴ТеєТе░ТеиТещТб╝</h3>
Т┤ЁТ╦▄Т┼кТд╦Тд╧Scala/JavaТд╟Тд╧Т╡пТд│ТдщТд╩ТддТ╠фТ┬ъТд╟Тд╣Тд╖ТбвТд█Тд▄Т╢ЄТ├╘Тд╟Тд╣ТдмТбвТ╕─Т┐═Т┼кТд╩Т╖╨Т╕│Тд╚Тд╖Тд╞PerlТдфPHPТд╩Тд╔Тд╟EUC-JPТдфShift-JISТд╬Т╩╕Т╗·Тд╬Т└╡Т╡мТ╔╜Т╕╜Тд╦ТдшТдыТе╤Те┐Тб╝ТеєТе▐Те├Те┴ТдмТбвТе▐ТеыТе┴Те╨ТедТе╚Т┬╨Т▒■Тд╬ТесТе╜Те├Те╔ТдЄТ╗╚Т═╤Тд╖Тд╩ТддТд╚Тб╩ТдвТдыТддТд╧Т╗╚Т═╤Тд╖Тд╞ТдтТе╨Те░Тд╦ТдшТдъТб╦Т╝║Т╟╘Тд╣ТдыТд│Тд╚ТдмТдвТдъТд▐Тд╖Тд┐ТбгТг▓Те╨ТедТе╚Т╩╕Т╗·ТдмТг▓Тд─Т╩┬ТдєТд└Т╛ьТ╣чТбвТ░ьТд─Т╠▄Тд╬Т╩╕Т╗·Тб╩Тг▓Те╨ТедТе╚Тб╦ТдмABТбвТ╞єТд─Т╠▄Тд╬Т╩╕Т╗·Тб╩Тг▓Те╨ТедТе╚Тб╦ТдмCDТд╚Тд╣ТдыТд╚ТбвТе╫ТеэТе░ТещТерТд╦Тд╧ABCDТд╚ТддТджТ╩╕Т╗·Т╬єТдмТ╕лТдиТд╞ТддТд▐Тд╣ТбгТд│Тд│Тд╟Т╩╕Т╗·BCТд╦Те╤Те┐Тб╝ТеєТе▐Те├Те┴ТдЄТд╣ТдыТд╚Т╩╕Т╗·ABТд╬BТд╚Т╩╕Т╗·CDТд╬CТд╟Т╣╜Т└оТд╡ТдьТд┐BCТд╦Те▐Те├Те┴Тд╖Тд╞Тд╖Тд▐ТджТ╠фТ┬ъТдмТ└╕Тд╕Тд▐Тд╣ТбгТе╤Те┐Тб╝ТеєТе▐Те├Те┴Тд╬Т╝║Т╟╘Тд╦Т▓├ТдиТбвТд╜ТдьТдЄТд╡ТдщТд╦Т├╓Т┤╣ТбжТ║яТ╜№Тд╣ТдыТдшТджТд╩Т╜шТ═¤Тд└Тд╚Т╩╕Т╗·Т▓╜Тд▒Тд╬Т╕╢Т░°Тд╦ТдтТд╩ТдъТд▐Тд╣ТбгТ║╟Т╢сТд╬Perl/PHPТд╧UnicodeТд╦Т┬╨Т▒■Тд╖Тд╞ТддТдыТдшТджТд╟Тд╣Тд╖ТбвТ┐╖Тд╖ТддТе╨Тб╝Те╕ТечТеєТдЄТ╗╚Т═╤Тд╣ТдьТд╨Тд╜Тд╬ТдшТджТд╩Т╠фТ┬ъТд╧Тд╩ТддТдщТд╖ТддТд╟Тд╣ТбгТб╩Т░╩Т┴░Тд╧Т└╡Т╡мТ╔╜Т╕╜ТдмТ╡нТ╜╥Тд╖ТдфТд╣ТддPerlТдЄТ╗фТд╧Т╕└Т╕ьТ╜шТ═¤Тд╟Т╗╚Т═╤Тд╖Тд╞ТдкТдъТд▐Тд╖Тд┐Тдм$Тбв@Тбв%Т╡нТ╣цТдЄТ┬чТ╬╠Тд╦Те┐ТедТе╫Тд╖Тд┐ТдпТд╩ТддТд╬Тд╟ТдфТдсТд▐Тд╖Тд┐ТбгТ╗╚Тд├Тд╞ТддТд╩ТддТд┐ТдсТ║╟Т╢сТд╬Тд│Тд╚Тд╧ТдшТдпТдяТдлТдщТд╩ТддТд╟Тд╣ТбгТб╦
***
<h3>Те│ТещТерТбзShift-JISТд╬Те└ТесТ╩╕Т╗·Т╠фТ┬ъ</h3>
0x5CТд╧ASCIIТд╟Те╨Те├ТепТе╣ТещТе├Те╖ТехТ╡нТ╣цТдЄТ░╒Т╠гТд╖ТбвShift-JISТд╟Тд╧Т▒▀Т╡нТ╣цТд╟Тд╣Тбг
Shift-JISТд╬Т╩╕Т╗·Тд╬Тг▓Те╨ТедТе╚Т╠▄Тд╦0x5CТдмТ┤▐Тд▐ТдьТд╞ТддТдыТ╩╕Т╗·ТбвТддТдяТдцТдыТе└ТесТ╩╕Т╗·ТдмТдвТдъТд▐Тд╣Тбг
0x5CТд╧Т┬┐ТдпТд╬Те╫ТеэТе░ТещТе▀ТеєТе░Т╕└Т╕ьТд╟ТеиТе╣Те▒Тб╝Те╫Т╩╕Т╗·Тд╚Тд╖Тд╞Т╗╚Т═╤Тд╡ТдьТд╞ТддТдыТд┐ТдсТбвShift-JISТд╬Те└ТесТ╩╕Т╗·ТдЄТе╜Тб╝Те╣Те│Тб╝Те╔ТдфТ╩╕Т╗·Т╬єТ╜шТ═¤Тд╟Т┴█Т─ъТд╖Тд╞ТддТд╩ТддТе╫ТеэТе░ТещТе▀ТеєТе░Т╕└Т╕ьТдмShift-JISТдЄТ░╖ТджТд╚Те└ТесТ╩╕Т╗·ТдмТ╕╢Т░°Тд╦Т╠фТ┬ъТдмТ╡пТд│ТдыТ▓─Т╟╜Т└нТдмТдвТдъТд▐Тд╣ТбгТ┬╨Т║ЎТд╚Тд╖Тд╞ТбвShift-JISТдЄТ╗╚ТдяТд╩ТддТдлТд╔ТджТд╖Тд╞ТдтТ╗╚Т═╤Тд╖Тд┐ТддТ╛ьТ╣чТд╧Тб╓Те╜Тб╫ЬЇЎЄТб╓Те╜\Тб╫Тд╬ТдшТджТд╦Тбв2Те╨ТедТе╚Т╠▄Тд╬Т─╛Т╕хТд╦ТеиТе╣Те▒Тб╝Те╫Т╩╕Т╗·Тд╬0x5CТдЄТ┴▐Т╞■Тд╣ТдыТ╩¤Т╦бТдмТдвТдъТд▐Тд╣Тбг
<a href="https://ja.wikipedia.org/wiki/Shift_JIS#2.E3.83.90.E3.82.A4.E3.83.88.E7.9B.AE.E3.81.8C5C.E7.AD.89.E3.81.AB.E3.81.AA.E3.82.8A.E3.81.86.E3.82.8B.E3.81.93.E3.81.A8.E3.81.AB.E3.82.88.E3.82.8B.E5.95.8F.E9.A1.8C" target="_blank">Shift-JISТд╬Те└ТесТ╩╕Т╗·Тб╩WikipediaТб╦</a>Тбг
B